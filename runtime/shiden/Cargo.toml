[package]
name = "shiden-runtime"
version = "5.46.0"
build = "build.rs"
authors.workspace = true
edition.workspace = true
homepage.workspace = true
repository.workspace = true

[dependencies]
# third-party dependencies
hex-literal = { workspace = true }
log = { workspace = true, optional = true }
num_enum = { workspace = true }
parity-scale-codec = { workspace = true }
scale-info = { workspace = true }
serde_json = { workspace = true }
smallvec = { workspace = true }

# primitives
fp-evm = { workspace = true }
fp-rpc = { workspace = true }
fp-self-contained = { workspace = true }

sp-api = { workspace = true }
sp-arithmetic = { workspace = true }
sp-block-builder = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-core = { workspace = true }
sp-genesis-builder = { workspace = true }
sp-inherents = { workspace = true }
sp-io = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true }
sp-runtime-interface = { workspace = true }
sp-session = { workspace = true }
sp-std = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version = { workspace = true }

# frame dependencies
frame-executive = { workspace = true }
frame-metadata-hash-extension = { workspace = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
frame-system-rpc-runtime-api = { workspace = true }
pallet-assets = { workspace = true }
pallet-aura = { workspace = true }
pallet-authorship = { workspace = true }
pallet-balances = { workspace = true }
pallet-contracts = { workspace = true }
pallet-dynamic-evm-base-fee = { workspace = true }
pallet-ethereum = { workspace = true }
pallet-evm = { workspace = true }
pallet-evm-precompile-blake2 = { workspace = true }
pallet-evm-precompile-bn128 = { workspace = true }
pallet-evm-precompile-dispatch = { workspace = true }
pallet-evm-precompile-ed25519 = { workspace = true }
pallet-evm-precompile-modexp = { workspace = true }
pallet-evm-precompile-sha3fips = { workspace = true }
pallet-evm-precompile-simple = { workspace = true }
pallet-identity = { workspace = true }
pallet-insecure-randomness-collective-flip = { workspace = true }
pallet-membership = { workspace = true }
pallet-message-queue = { workspace = true }
pallet-migrations = { workspace = true }
pallet-multisig = { workspace = true }
pallet-proxy = { workspace = true }
pallet-session = { workspace = true, features = ["historical"] }
pallet-sudo = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
pallet-utility = { workspace = true }
pallet-vesting = { workspace = true }
pallet-xcm-benchmarks = { workspace = true, optional = true }

# cumulus dependencies
cumulus-pallet-aura-ext = { workspace = true }
cumulus-pallet-parachain-system = { workspace = true }
cumulus-pallet-xcm = { workspace = true }
cumulus-pallet-xcmp-queue = { workspace = true }
cumulus-primitives-aura = { workspace = true }
cumulus-primitives-core = { workspace = true }
cumulus-primitives-utility = { workspace = true }
parachain-info = { workspace = true }
parachains-common = { workspace = true }

# polkadot dependencies
polkadot-parachain = { workspace = true }
polkadot-primitives = { workspace = true }
polkadot-runtime-common = { workspace = true }
xcm = { workspace = true }
xcm-builder = { workspace = true }
xcm-executor = { workspace = true }
xcm-runtime-apis = { workspace = true }

# orml dependencies
orml-oracle = { workspace = true }
orml-xcm-support = { workspace = true }
orml-xtokens = { workspace = true }

# benchmarking
array-bytes = { workspace = true }
frame-benchmarking = { workspace = true, optional = true }
frame-system-benchmarking = { workspace = true, optional = true }

# try-runtime
frame-try-runtime = { workspace = true, optional = true }

# Astar pallets
astar-primitives = { workspace = true }
astar-xcm-benchmarks = { workspace = true, optional = true }
pallet-collator-selection = { workspace = true }
pallet-dapp-staking = { workspace = true }
pallet-evm-precompile-assets-erc20 = { workspace = true }
pallet-evm-precompile-dapp-staking = { workspace = true }
pallet-evm-precompile-dispatch-lockdrop = { workspace = true }
pallet-evm-precompile-sr25519 = { workspace = true }
pallet-evm-precompile-substrate-ecdsa = { workspace = true }
pallet-evm-precompile-xcm = { workspace = true }
pallet-inflation = { workspace = true }
pallet-price-aggregator = { workspace = true }
pallet-xc-asset-config = { workspace = true }
pallet-xcm = { workspace = true }
vesting-mbm = { workspace = true }

dapp-staking-runtime-api = { workspace = true }

precompile-utils = { workspace = true }

# Moonbeam tracing
moonbeam-evm-tracer = { workspace = true, optional = true }
moonbeam-rpc-primitives-debug = { workspace = true, optional = true }
moonbeam-rpc-primitives-txpool = { workspace = true, optional = true }

# chain-extensions
pallet-chain-extension-assets = { workspace = true }

[build-dependencies]
substrate-wasm-builder = { workspace = true, optional = true }

[features]
default = ["std"]
std = [
	"parity-scale-codec/std",
	"serde_json/std",
	"fp-rpc/std",
	"fp-self-contained/std",
	"fp-evm/std",
	"sp-std/std",
	"sp-api/std",
	"sp-core/std",
	"sp-consensus-aura/std",
	"sp-io/std",
	"sp-runtime/std",
	"sp-arithmetic/std",
	"sp-runtime-interface/std",
	"sp-version/std",
	"sp-block-builder/std",
	"sp-transaction-pool/std",
	"sp-inherents/std",
	"frame-support/std",
	"frame-executive/std",
	"frame-system/std",
	"frame-system-rpc-runtime-api/std",
	"frame-metadata-hash-extension/std",
	"pallet-authorship/std",
	"pallet-aura/std",
	"pallet-assets/std",
	"pallet-balances/std",
	"pallet-contracts/std",
	"pallet-dynamic-evm-base-fee/std",
	"pallet-ethereum/std",
	"pallet-evm/std",
	"pallet-evm-precompile-blake2/std",
	"pallet-evm-precompile-simple/std",
	"pallet-evm-precompile-bn128/std",
	"sp-genesis-builder/std",
	"pallet-evm-precompile-dispatch/std",
	"pallet-evm-precompile-dispatch-lockdrop/std",
	"pallet-evm-precompile-ed25519/std",
	"pallet-evm-precompile-modexp/std",
	"xcm-runtime-apis/std",
	"pallet-evm-precompile-sha3fips/std",
	"pallet-dapp-staking/std",
	"dapp-staking-runtime-api/std",
	"pallet-inflation/std",
	"pallet-evm-precompile-dapp-staking/std",
	"pallet-evm-precompile-sr25519/std",
	"pallet-evm-precompile-assets-erc20/std",
	"pallet-evm-precompile-substrate-ecdsa/std",
	"pallet-evm-precompile-xcm/std",
	"pallet-identity/std",
	"pallet-multisig/std",
	"pallet-migrations/std",
	"pallet-membership/std",
	"pallet-insecure-randomness-collective-flip/std",
	"pallet-session/std",
	"pallet-utility/std",
	"pallet-proxy/std",
	"pallet-timestamp/std",
	"pallet-vesting/std",
	"orml-oracle/std",
	"sp-offchain/std",
	"sp-session/std",
	"pallet-sudo/std",
	"pallet-transaction-payment/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-xcm/std",
	"pallet-price-aggregator/std",
	"parachain-info/std",
	"polkadot-parachain/std",
	"polkadot-primitives/std",
	"polkadot-runtime-common/std",
	"cumulus-primitives-aura/std",
	"cumulus-primitives-core/std",
	"cumulus-primitives-utility/std",
	"cumulus-pallet-parachain-system/std",
	"cumulus-pallet-aura-ext/std",
	"cumulus-pallet-xcmp-queue/std",
	"cumulus-pallet-xcm/std",
	"pallet-collator-selection/std",
	"moonbeam-evm-tracer/std",
	"moonbeam-rpc-primitives-debug/std",
	"moonbeam-rpc-primitives-txpool/std",
	"frame-benchmarking/std",
	"frame-try-runtime/std",
	"xcm/std",
	"xcm-builder/std",
	"xcm-executor/std",
	"pallet-xc-asset-config/std",
	"substrate-wasm-builder",
	"pallet-chain-extension-assets/std",
	"orml-xtokens/std",
	"orml-xcm-support/std",
	"astar-primitives/std",
	"pallet-message-queue/std",
	"parachains-common/std",
	"astar-xcm-benchmarks?/std",
	"frame-system-benchmarking?/std",
	"log?/std",
	"num_enum/std",
	"pallet-xcm-benchmarks?/std",
	"precompile-utils/std",
	"scale-info/std",
	"vesting-mbm/std",
]
runtime-benchmarks = [
	"log",
	"frame-benchmarking",
	"frame-support/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-dapp-staking/runtime-benchmarks",
	"pallet-inflation/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-ethereum/runtime-benchmarks",
	"pallet-xcm/runtime-benchmarks",
	"pallet-xcm-benchmarks/runtime-benchmarks",
	"astar-xcm-benchmarks/runtime-benchmarks",
	"pallet-membership/runtime-benchmarks",
	"xcm-builder/runtime-benchmarks",
	"pallet-xc-asset-config/runtime-benchmarks",
	"pallet-collator-selection/runtime-benchmarks",
	"astar-primitives/runtime-benchmarks",
	"pallet-assets/runtime-benchmarks",
	"pallet-dynamic-evm-base-fee/runtime-benchmarks",
	"pallet-price-aggregator/runtime-benchmarks",
	"cumulus-primitives-utility/runtime-benchmarks",
	"cumulus-pallet-parachain-system/runtime-benchmarks",
	"cumulus-pallet-xcmp-queue/runtime-benchmarks",
	"frame-benchmarking/runtime-benchmarks",
	"orml-xtokens/runtime-benchmarks",
	"pallet-chain-extension-assets/runtime-benchmarks",
	"pallet-contracts/runtime-benchmarks",
	"pallet-evm/runtime-benchmarks",
	"pallet-evm-precompile-assets-erc20/runtime-benchmarks",
	"pallet-evm-precompile-dapp-staking/runtime-benchmarks",
	"pallet-evm-precompile-xcm/runtime-benchmarks",
	"pallet-identity/runtime-benchmarks",
	"pallet-multisig/runtime-benchmarks",
	"pallet-migrations/runtime-benchmarks",
	"pallet-proxy/runtime-benchmarks",
	"pallet-sudo/runtime-benchmarks",
	"pallet-utility/runtime-benchmarks",
	"pallet-vesting/runtime-benchmarks",
	"polkadot-parachain/runtime-benchmarks",
	"polkadot-primitives/runtime-benchmarks",
	"polkadot-runtime-common/runtime-benchmarks",
	"xcm-executor/runtime-benchmarks",
	"xcm-runtime-apis/runtime-benchmarks",
	"cumulus-primitives-core/runtime-benchmarks",
	"pallet-message-queue/runtime-benchmarks",
	"parachains-common/runtime-benchmarks",
	"orml-oracle/runtime-benchmarks",
	"vesting-mbm/runtime-benchmarks",
]
try-runtime = [
	"astar-primitives/try-runtime",
	"fp-self-contained/try-runtime",
	"log",
	"frame-try-runtime/try-runtime",
	"frame-executive/try-runtime",
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"pallet-aura/try-runtime",
	"pallet-balances/try-runtime",
	"orml-oracle/try-runtime",
	"pallet-price-aggregator/try-runtime",
	"pallet-membership/try-runtime",
	"pallet-dapp-staking/try-runtime",
	"pallet-inflation/try-runtime",
	"pallet-sudo/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"pallet-utility/try-runtime",
	"pallet-vesting/try-runtime",
	"pallet-ethereum/try-runtime",
	"pallet-xc-asset-config/try-runtime",
	"pallet-assets/try-runtime",
	"pallet-authorship/try-runtime",
	"pallet-collator-selection/try-runtime",
	"pallet-session/try-runtime",
	"pallet-xcm/try-runtime",
	"pallet-identity/try-runtime",
	"pallet-multisig/try-runtime",
	"pallet-migrations/try-runtime",
	"pallet-proxy/try-runtime",
	"pallet-insecure-randomness-collective-flip/try-runtime",
	"pallet-contracts/try-runtime",
	"cumulus-pallet-aura-ext/try-runtime",
	"cumulus-pallet-parachain-system/try-runtime",
	"cumulus-pallet-xcm/try-runtime",
	"cumulus-pallet-xcmp-queue/try-runtime",
	"parachain-info/try-runtime",
	"pallet-dynamic-evm-base-fee/try-runtime",
	"pallet-evm/try-runtime",
	"orml-xtokens/try-runtime",
	"pallet-message-queue/try-runtime",
	"astar-xcm-benchmarks?/try-runtime",
	"pallet-chain-extension-assets/try-runtime",
	"polkadot-runtime-common/try-runtime",
	"sp-runtime/try-runtime",
	"vesting-mbm/try-runtime",
]
evm-tracing = [
	"moonbeam-evm-tracer",
	"moonbeam-rpc-primitives-debug",
	"moonbeam-rpc-primitives-txpool",
]

# Enable metadata hash generation at compile time for the `CheckMetadataHash` extension.
metadata-hash = ["substrate-wasm-builder?/metadata-hash"]

# A feature that should be enabled when the runtime should be built for on-chain
# deployment. This will disable stuff that shouldn't be part of the on-chain wasm
on-chain-release-build = ["metadata-hash"]
