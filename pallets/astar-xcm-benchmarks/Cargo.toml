[package]
name = "astar-xcm-benchmarks"
version = "0.1.0"
description = "Pallet for providing benchmarks for xcm instructions"
authors.workspace = true
edition.workspace = true
homepage.workspace = true
repository.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
log = { workspace = true }
serde = { workspace = true, optional = true }

# Substrate
frame-support = { workspace = true }
frame-system = { workspace = true }
parity-scale-codec = { workspace = true, optional = true, features = ["derive"] }
scale-info = { workspace = true }
sp-runtime = { workspace = true }
sp-std = { workspace = true }

# Polkadot / XCM
pallet-xcm-benchmarks = { workspace = true }
xcm = { workspace = true }
xcm-executor = { workspace = true }

# Benchmarks
frame-benchmarking = { workspace = true, optional = true }

# Astar
astar-primitives = { workspace = true }

[dev-dependencies]
pallet-assets = { workspace = true, features = ["std"] }
pallet-balances = { workspace = true, features = ["std"] }
sp-core = { workspace = true, features = ["std"] }
sp-io = { workspace = true, features = ["std"] }
xcm-builder = { workspace = true, features = ["std"] }

[features]
default = ["std"]
std = [
	"astar-primitives/std",
	"frame-benchmarking/std",
	"frame-support/std",
	"frame-system/std",
	"pallet-xcm-benchmarks/std",
	"parity-scale-codec/std",
	"serde",
	"sp-std/std",
	"sp-runtime/std",
	"xcm/std",
	"log/std",
	"scale-info/std",
	"serde?/std",
	"xcm-executor/std",
]

try-runtime = [
	"frame-support/try-runtime",
	"astar-primitives/try-runtime",
	"frame-system/try-runtime",
	"sp-runtime/try-runtime",
]

runtime-benchmarks = [
	"frame-benchmarking",
	"frame-system/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"pallet-assets/runtime-benchmarks",
	"pallet-xcm-benchmarks/runtime-benchmarks",
	"parity-scale-codec",
	"xcm-executor/runtime-benchmarks",
	"astar-primitives/runtime-benchmarks",
	"frame-benchmarking/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
]
