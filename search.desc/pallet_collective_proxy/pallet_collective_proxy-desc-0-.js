searchState.loadedDescShard("pallet_collective_proxy", 0, "The <code>pallet</code> module in each FRAME pallet hosts the most …\nAutogenerated weights for pallet_collective_proxy\nContains a variant per dispatchable extrinsic that this …\nFilter to determine whether a call can be executed or not.\nOrigin that can act on behalf of the collective.\nCommunity proxy call executed successfully.\nConfiguration trait of this pallet.\nThe <code>Event</code> enum of this pallet\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nAccount representing the collective treasury.\nThe overarching call type.\nThe overarching event type.\nWeight info\nAuto-generated docs-only module listing all defined …\nExecutes the call on a behalf of an aliased account.\nExecutes the call on a behalf of an aliased account.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>execute_call</code>.\nAuto-generated docs-only module listing all (public and …\nExecutes the call on a behalf of an aliased account.\nWeights for pallet_collective_proxy using the Substrate …\nWeight functions needed for pallet_collective_proxy.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.")