searchState.loadedDescShard("dapp_staking_runtime_api", 0, "An ordered map based on a B-Tree.\ndApp Staking Api.\nMoves all elements from <code>other</code> into <code>self</code>, leaving <code>other</code> …\nHow many blocks are there per standard era.\nClears the map, removing all elements.\nReturns <code>true</code> if the map contains a value for the specified …\nCreates an empty <code>BTreeMap</code>.\nGets the given key’s corresponding entry in the map for …\nHow many standard eras are there in the build&amp;earn …\nFor how many standard era lengths does the voting …\nCreates an iterator that visits all elements (key-value …\nReturns the first entry in the map for in-place …\nReturns the first key-value pair in the map. The key in …\nReturns the argument unchanged.\nConverts a <code>[(K, V); N]</code> into a <code>BTreeMap&lt;(K, V)&gt;</code>.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns a reference to the value corresponding to the key.\nGet dApp ranked tier assignment for the given dApp.\nGet dApp tier assignment for the given dApp.\nReturns the key-value pair corresponding to the supplied …\nReturns a mutable reference to the value corresponding to …\nReturns a reference to the value corresponding to the …\nInserts a key-value pair into the map.\nCalls <code>U::from(self)</code>.\nGets an owning iterator over the entries of the map, …\nCreates a consuming iterator visiting all the keys, in …\nCreates a consuming iterator visiting all the values, in …\nReturns <code>true</code> if the map contains no elements.\nCheck if the given address is a precompile. Should only be …\nGets an iterator over the entries of the map, sorted by …\nGets a mutable iterator over the entries of the map, …\nGets an iterator over the keys of the map, in sorted order.\nReturns the last entry in the map for in-place …\nReturns the last key-value pair in the map. The key in …\nReturns the number of elements in the map.\nReturns a <code>Cursor</code> pointing at the gap before the smallest …\nReturns a <code>CursorMut</code> pointing at the gap before the …\nMakes a new, empty <code>BTreeMap</code>.\nMakes a new empty BTreeMap with a reasonable choice for B.\nHow many periods are there in one cycle.\nRemoves and returns the first element in the map. The key …\nRemoves and returns the last element in the map. The key …\nConstructs a double-ended iterator over a sub-range of …\nConstructs a mutable double-ended iterator over a …\nRemoves a key from the map, returning the value at the key …\nRemoves a key from the map, returning the stored key and …\nRetains only the elements specified by the predicate.\nSplits the collection into two at the given key. Returns …\nTries to insert a key-value pair into the map, and returns …\nReturns a <code>Cursor</code> pointing at the gap after the greatest key\nReturns a <code>CursorMut</code> pointing at the gap after the greatest …\nGets an iterator over the values of the map, in order by …\nGets a mutable iterator over the values of the map, in …")