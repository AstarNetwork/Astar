searchState.loadedDescShard("pallet_collator_selection", 0, "Collator Selection pallet.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAutogenerated weights for pallet_collator_selection\nUsed to check whether an account is allowed to be a …\nUsed to check whether an account is allowed to be a …\nUser is already a candidate\nUser is already an Invulnerable\nThe candidacy bond is currently in the un-bonding period.\nContains a variant per dispatchable extrinsic that this …\nFixed amount to deposit to become a collator.\nA new candidate joined.\nBasic information about a collation candidate.\nA candidate was removed.\nA candidate was slashed.\nThe (community, limited) collation candidates.\nConfiguration trait of this pallet.\nThe currency mechanism.\nDesired number of candidates.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nCan be used to configure the genesis state of this pallet.\nA convertor from collators id. Since this pallet does not …\nThe invulnerable, fixed collators.\nWill be kicked if block is not produced in threshold.\nLast block authored by collator.\nMaximum number of candidates that we should have. This is …\nMaximum number of invulnerables.\nMinimum number of candidates that we should have. This is …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe candidacy bond was set.\nThe number of desired candidates was set.\nNew invulnerables candidates were set.\nAccount has no associated validator ID\nNo candidacy bond available for withdrawal.\nCandidates who initiated leave intent or kicked.\nAccount is now allowed to be a candidate due to an …\nUser is not a candidate\nThe <code>Pallet</code> struct, the main type that implements traits …\nPermission issue\nAccount Identifier from which the internal Pot is …\nOverarching event type.\nDestination account for slashed amount.\nHow many in perc kicked collators should be slashed (set 0 …\nToo few candidates\nToo many candidates\nUnknown error\nOrigin that can dictate updating parameters of this pallet.\nA stable ID for a validator.\nA conversion from account ID to validator ID.\nValidator ID is not yet registered\nValidate a user is registered\nSomething that can give information about the current …\nThe weight information of this pallet.\nGet a unique, inaccessible account id from the <code>PotId</code>.\n<code>true</code> if the account is allowed to be a candidate, <code>false</code> …\nAssemble the current set of candidates and invulnerables …\nReserved deposit.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck whether an account is a candidate.\nKicks out and candidates that did not produce a block in …\nDeregister <code>origin</code> as a collator candidate. Note that the …\nDeregister <code>origin</code> as a collator candidate. Note that the …\nCreate a call with the variant <code>leave_intent</code>.\nCreate a call with the variant <code>register_as_candidate</code>.\nCreate a call with the variant <code>set_candidacy_bond</code>.\nCreate a call with the variant <code>set_desired_candidates</code>.\nCreate a call with the variant <code>set_invulnerables</code>.\nCreate a call with the variant <code>set_slash_destination</code>.\nCreate a call with the variant <code>withdraw_bond</code>.\nRegister this account as a collator candidate. The account …\nRegister this account as a collator candidate. The account …\nSet the candidacy bond amount.\nSet the candidacy bond amount.\nSet the ideal number of collators (not including the …\nSet the ideal number of collators (not including the …\nSet the list of invulnerable (fixed) collators.\nSet the list of invulnerable (fixed) collators.\nSet slash destination. Use <code>Some</code> to deposit slashed balance …\nSet slash destination. Use <code>Some</code> to deposit slashed balance …\nAuto-generated docs-only module listing all (public and …\nAccount identifier.\nWithdraw <code>CandidacyBond</code> after un-bonding period has …\nWithdraw <code>CandidacyBond</code> after un-bonding period has …\nDeregister <code>origin</code> as a collator candidate. Note that the …\nRegister this account as a collator candidate. The account …\nSet the candidacy bond amount.\nSet the ideal number of collators (not including the …\nSet the list of invulnerable (fixed) collators.\nSet slash destination. Use <code>Some</code> to deposit slashed balance …\nWithdraw <code>CandidacyBond</code> after un-bonding period has …\nFixed amount to deposit to become a collator.\nThe (community, limited) collation candidates.\nDesired number of candidates.\nThe invulnerable, fixed collators.\nLast block authored by collator.\nCandidates who initiated leave intent or kicked.\nDestination account for slashed amount.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for pallet_collator_selection using the Substrate …\nWeight functions needed for pallet_collator_selection.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>CollatorSelection::Candidates</code> (r:1 w:1) Proof: …\nStorage: <code>CollatorSelection::Candidates</code> (r:1 w:0) Proof: …\nStorage: <code>System::Account</code> (r:2 w:2) Proof: <code>System::Account</code> (…\nStorage: <code>CollatorSelection::Candidates</code> (r:1 w:1) Proof: …\nStorage: <code>CollatorSelection::CandidacyBond</code> (r:0 w:1) Proof: …\nStorage: <code>CollatorSelection::DesiredCandidates</code> (r:0 w:1) …\nStorage: <code>Session::NextKeys</code> (r:48 w:0) Proof: …\nStorage: <code>CollatorSelection::NonCandidates</code> (r:1 w:1) Proof: …")