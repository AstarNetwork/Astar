searchState.loadedDescShard("pallet_treasury", 0, "Made with <em>Substrate</em>, for <em>Polkadot</em>.\nA spending proposal.\nAn index of a proposal. Just a <code>u32</code>.\nA trait to allow the Treasury Pallet to spend it’s funds …\nTypedGet implementation to get the AccountId of the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAutogenerated weights for <code>pallet_treasury</code>\nProposal indices that have been approved but not yet …\nOrigin from which approvals must come.\nSome funds have been allocated.\nPercentage of spare funds (if any) that are burnt per …\nHandler for the unbalanced decrease when treasury funds …\nSome of our funds have been burnt.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe staking balance.\nThe amount which has been reported as inactive to Currency.\nSome funds have been deposited.\nError for the treasury pallet.\nThe <code>Event</code> enum of this pallet\nCan be used to configure the genesis state of this pallet.\n<code>Instance1</code> to be used for instantiable pallets defined with …\nThe spend origin is valid but the amount it is allowed to …\nProposer’s balance is too low.\nNo proposal, bounty or spend at that index.\nThe maximum number of approvals that can wait in the …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nHandler for the unbalanced decrease when slashing for a …\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe treasury’s pallet id, used for deriving its …\nFraction of a proposal’s value that should be bonded in …\nMaximum amount of funds that should be placed in a deposit …\nMinimum amount of funds that should be placed in a deposit …\nProposal has not been approved.\nProposals that have been made.\nNew proposal.\nOrigin from which rejections must come.\nA proposal was rejected; funds were slashed.\nSpending has finished; this is the amount that rolls over …\nThe overarching event type.\nRuntime hooks to external pallet using treasury to compute …\nPeriod between successive spends.\nWe have ended a spend period and will now allocate funds.\nToo many approvals in the queue.\nA new spend proposal has been approved. The inactive funds …\nWeight information for extrinsics in this pallet.\nThe account ID of the treasury pot.\nAn auto-generated getter for <code>Approvals</code>.\nApprove a proposal.\nApprove a proposal.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>approve_proposal</code>.\nCreate a call with the variant <code>propose_spend</code>.\nCreate a call with the variant <code>reject_proposal</code>.\nComplexity\nReturn the amount of money in the pot.\nAn auto-generated getter for <code>ProposalCount</code>.\nAn auto-generated getter for <code>Proposals</code>.\nPut forward a suggestion for spending.\nPut forward a suggestion for spending.\nReject a proposed spend.\nReject a proposed spend.\nSpend some money! returns number of approvals before spend.\nAuto-generated docs-only module listing all (public and …\nApprove a proposal.\nPut forward a suggestion for spending.\nReject a proposed spend.\nProposal indices that have been approved but not yet …\nThe amount which has been reported as inactive to Currency.\nNumber of proposals that have been made.\nProposals that have been made.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for <code>pallet_treasury</code> using the Substrate node and …\nWeight functions needed for <code>pallet_treasury</code>.\nStorage: <code>Treasury::Proposals</code> (r:1 w:0) Proof: …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: <code>Treasury::Deactivated</code> (r:1 w:1) Proof: …\nStorage: <code>Treasury::ProposalCount</code> (r:1 w:1) Proof: …\nStorage: <code>Treasury::Proposals</code> (r:1 w:1) Proof: …")