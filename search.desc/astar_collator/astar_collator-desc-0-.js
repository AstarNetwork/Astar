searchState.loadedDescShard("astar_collator", 0, "Astar collator library.\nBuild a chain specification.\nValidate blocks.\nAn overarching CLI command definition.\nExport blocks.\nExport the genesis state of the parachain.\nExport the genesis wasm of the parachain.\nExport the state of a given block into a chain spec.\nA trait to identify the network backend based on the chain …\nImport blocks.\nKey management cli utilities\nRemove the whole chain.\nRevert the chain to a previous state.\nSign a message, with a given (secret) key.\nPossible subcommands of the main binary.\nGenerate a seed that provides a vanity address.\nVerify a signature for a message, provided on STDIN, with …\nThe actual relay chain cli object.\nThe base path that should be used by the relay chain.\nOptional chain id that should be passed to the relay chain.\nReturns the default network backend.\nEnable Ethereum compatible JSON-RPC servers (disabled by …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDevelopment node support. Support for local development …\nParse the relay chain CLI parameters using the para chain …\nDisable automatic hardware benchmarks.\nParachain node support. Support for Astar ecosystem …\nProposer’s maximum block size limit in bytes\nProposer’s soft deadline in percents of block size\nRelaychain arguments\nParse command line arguments into service configuration.\nPossible subcommand with parameters.\nSpecialized <code>ChainSpec</code> for local network.\nParachain host functions\nDevelopment config.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nBuild a partial chain component config\nBuilds a new service.\nParachain specs.\nParachain specified service. Parachain Service and …\nNode <code>ChainSpec</code> extensions.\nAstar chain specifications.\nKnown bad block hashes.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe id of the Parachain.\nThe relay chain of the Parachain.\nShibuya chain specifications.\nShiden chain specifications.\nTry to get the extension from the given <code>ChainSpec</code>.\nSpecialized <code>ChainSpec</code> for Astar Network.\nGet Astar chain specification.\nSpecialized <code>ChainSpec</code> for Shibuya testnet.\nGen Shibuya chain specification.\nSpecialized <code>ChainSpec</code> for Shiden Network.\nGen Shiden chain specification.\nImplements all runtime apis for the client side.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTo add additional config to start_xyz_node functions\nParachain host functions\nParachain executor\nBuild aura import queue with fallback to relay-chain …\nWhether EVM RPC be enabled\nEVM tracing configuration\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nHardware benchmarks score\nCalls <code>U::from(self)</code>.\nStarts a <code>ServiceBuilder</code> for a full service.\nMaxium allowed block size limit to propose\nSoft deadline limit used by <code>Proposer</code>\nStart a parachain node.")