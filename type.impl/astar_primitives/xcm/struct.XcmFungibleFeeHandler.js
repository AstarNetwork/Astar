(function() {var type_impls = {
"astar_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TakeRevenue-for-XcmFungibleFeeHandler%3CAccountId,+Matcher,+Assets,+FeeDestination%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/astar_primitives/xcm/mod.rs.html#260-265\">source</a><a href=\"#impl-TakeRevenue-for-XcmFungibleFeeHandler%3CAccountId,+Matcher,+Assets,+FeeDestination%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;AccountId, Assets, Matcher, FeeDestination&gt; TakeRevenue for <a class=\"struct\" href=\"astar_primitives/xcm/struct.XcmFungibleFeeHandler.html\" title=\"struct astar_primitives::xcm::XcmFungibleFeeHandler\">XcmFungibleFeeHandler</a>&lt;AccountId, Matcher, Assets, FeeDestination&gt;<div class=\"where\">where\n    AccountId: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    Assets: Mutate&lt;AccountId&gt;,\n    Matcher: MatchesFungibles&lt;&lt;Assets as Inspect&lt;AccountId&gt;&gt;::AssetId, &lt;Assets as Inspect&lt;AccountId&gt;&gt;::Balance&gt;,\n    FeeDestination: Get&lt;AccountId&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_revenue\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/astar_primitives/xcm/mod.rs.html#267\">source</a><a href=\"#method.take_revenue\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">take_revenue</a>(revenue: Asset)</h4></section></summary><div class='docblock'>Do something with the given <code>revenue</code>, which is a single non-wildcard <code>Asset</code>.</div></details></div></details>","TakeRevenue","astar_runtime::xcm_config::AstarXcmFungibleFeeHandler"]],
"shibuya_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TakeRevenue-for-XcmFungibleFeeHandler%3CAccountId,+Matcher,+Assets,+FeeDestination%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/astar_primitives/xcm/mod.rs.html#260-265\">source</a><a href=\"#impl-TakeRevenue-for-XcmFungibleFeeHandler%3CAccountId,+Matcher,+Assets,+FeeDestination%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;AccountId, Assets, Matcher, FeeDestination&gt; TakeRevenue for <a class=\"struct\" href=\"astar_primitives/xcm/struct.XcmFungibleFeeHandler.html\" title=\"struct astar_primitives::xcm::XcmFungibleFeeHandler\">XcmFungibleFeeHandler</a>&lt;AccountId, Matcher, Assets, FeeDestination&gt;<div class=\"where\">where\n    AccountId: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    Assets: Mutate&lt;AccountId&gt;,\n    Matcher: MatchesFungibles&lt;&lt;Assets as Inspect&lt;AccountId&gt;&gt;::AssetId, &lt;Assets as Inspect&lt;AccountId&gt;&gt;::Balance&gt;,\n    FeeDestination: Get&lt;AccountId&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_revenue\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/astar_primitives/xcm/mod.rs.html#267\">source</a><a href=\"#method.take_revenue\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">take_revenue</a>(revenue: Asset)</h4></section></summary><div class='docblock'>Do something with the given <code>revenue</code>, which is a single non-wildcard <code>Asset</code>.</div></details></div></details>","TakeRevenue","shibuya_runtime::xcm_config::ShibuyaXcmFungibleFeeHandler"]],
"shiden_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TakeRevenue-for-XcmFungibleFeeHandler%3CAccountId,+Matcher,+Assets,+FeeDestination%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/astar_primitives/xcm/mod.rs.html#260-265\">source</a><a href=\"#impl-TakeRevenue-for-XcmFungibleFeeHandler%3CAccountId,+Matcher,+Assets,+FeeDestination%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;AccountId, Assets, Matcher, FeeDestination&gt; TakeRevenue for <a class=\"struct\" href=\"astar_primitives/xcm/struct.XcmFungibleFeeHandler.html\" title=\"struct astar_primitives::xcm::XcmFungibleFeeHandler\">XcmFungibleFeeHandler</a>&lt;AccountId, Matcher, Assets, FeeDestination&gt;<div class=\"where\">where\n    AccountId: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    Assets: Mutate&lt;AccountId&gt;,\n    Matcher: MatchesFungibles&lt;&lt;Assets as Inspect&lt;AccountId&gt;&gt;::AssetId, &lt;Assets as Inspect&lt;AccountId&gt;&gt;::Balance&gt;,\n    FeeDestination: Get&lt;AccountId&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_revenue\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/astar_primitives/xcm/mod.rs.html#267\">source</a><a href=\"#method.take_revenue\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">take_revenue</a>(revenue: Asset)</h4></section></summary><div class='docblock'>Do something with the given <code>revenue</code>, which is a single non-wildcard <code>Asset</code>.</div></details></div></details>","TakeRevenue","shiden_runtime::xcm_config::ShidenXcmFungibleFeeHandler"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()