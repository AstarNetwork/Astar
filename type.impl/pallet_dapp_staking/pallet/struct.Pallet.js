(function() {var type_impls = {
"astar_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; BeforeAllRuntimeMigrations for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all_runtime_migrations\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.before_all_runtime_migrations\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all_runtime_migrations</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Something that should happen before runtime migrations are executed.</div></details></div></details>","BeforeAllRuntimeMigrations","astar_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#677\">source</a><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; Callable&lt;T&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = <a class=\"enum\" href=\"pallet_dapp_staking/pallet/enum.Call.html\" title=\"enum pallet_dapp_staking::pallet::Call\">Call</a>&lt;T&gt;</h4></section></div></details>","Callable<T>","astar_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/clone.rs.html#172\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","astar_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","astar_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; GetStorageVersion for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.InCodeStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.InCodeStorageVersion\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">InCodeStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This type is generated by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_code_storage_version\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.in_code_storage_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">in_code_storage_version</a>() -&gt; &lt;<a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt; as GetStorageVersion&gt;::InCodeStorageVersion</h4></section></summary><div class='docblock'>Returns the in-code storage version as specified in the\n<a href=\"crate::pallet_macros::storage_version\"><code>storage_version</code></a> attribute, or\n[<code>NoStorageVersionSet</code>] if the attribute is missing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.on_chain_storage_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the storage version of the pallet as last set in the actual on-chain storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>() -&gt; Self::InCodeStorageVersion</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated: This method has been renamed to <code>in_code_storage_version</code> and will be removed after March 2024.</span></div></span><div class='docblock'>DEPRECATED: Use [<code>Self::current_storage_version</code>] instead. <a>Read more</a></div></details></div></details>","GetStorageVersion","astar_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#631\">source</a><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#632\">source</a><a href=\"#method.on_initialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    now: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n) -&gt; Weight</h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#637\">source</a><a href=\"#method.on_idle\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    _block: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight,\n) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a blockโs idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#641\">source</a><a href=\"#method.integrity_test\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this palletโs configuration. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(_n: BlockNumber, _weight: &amp;mut WeightMeter)</h4></section></summary><div class='docblock'>A hook to run logic after inherent application. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a โruntime upgradeโ) is detected by the FRAME\n<code>Executive</code> pallet. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main blockchain execution. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","astar_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; IntegrityTest for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.integrity_test\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","astar_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.offchain_worker\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","astar_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_finalize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","astar_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnGenesis for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.on_genesis\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","astar_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_idle\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight,\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","astar_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_initialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","astar_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnPoll&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_poll\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    weight: &amp;mut WeightMeter,\n)</h4></section></summary><div class='docblock'>Code to execute every now and then at the beginning of the block after inherent application. <a>Read more</a></div></details></div></details>","OnPoll<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","astar_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnRuntimeUpgrade for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","astar_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1426\">source</a><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner_unstake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1433-1437\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.inner_unstake\" class=\"fn\">inner_unstake</a>(\n    account: &amp;&lt;T as Config&gt;::AccountId,\n    smart_contract: &amp;&lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"pallet_dapp_staking/types/struct.StakeAmount.html\" title=\"struct pallet_dapp_staking::types::StakeAmount\">StakeAmount</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>), DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Inner <code>unstake</code> functionality for an <strong>active</strong> smart contract.\nIf successful returns the <code>StakeAmount</code> that was unstaked, and the updated bonus status.</p>\n<ul>\n<li>Ensures the contract is still registered.</li>\n<li>Updates staker info, ledger, and contract stake info.</li>\n<li>Returns the unstaked amount and updated bonus status.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner_unstake_from_unregistered\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1548-1551\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.inner_unstake_from_unregistered\" class=\"fn\">inner_unstake_from_unregistered</a>(\n    account: &amp;&lt;T as Config&gt;::AccountId,\n    smart_contract: &amp;&lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"pallet_dapp_staking/types/struct.StakeAmount.html\" title=\"struct pallet_dapp_staking::types::StakeAmount\">StakeAmount</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>), DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Handles unstaking from an <strong>unregistered</strong> smart contract.</p>\n<ul>\n<li>Ensures the contract is no longer active.</li>\n<li>Updates staker info and ledger.</li>\n<li>Returns the unstaked amount and preserves the original bonus status.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner_stake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1624-1629\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.inner_stake\" class=\"fn\">inner_stake</a>(\n    account: &amp;&lt;T as Config&gt;::AccountId,\n    smart_contract: &amp;&lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: <a class=\"struct\" href=\"pallet_dapp_staking/types/struct.StakeAmount.html\" title=\"struct pallet_dapp_staking::types::StakeAmount\">StakeAmount</a>,\n    bonus_status: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Inner <code>stake</code> functionality.</p>\n<p>Specifies the amount in the form of the <code>StakeAmount</code> struct, allowing simultaneous update of both <code>voting</code> and <code>build_and_earn</code> amounts.\nThe <code>bonus_status</code> is used to determine if the staker is still eligible for the bonus reward. This is useful for the <code>move</code> extrinsic.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_staker\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1736\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.is_staker\" class=\"fn\">is_staker</a>(account: &amp;&lt;T as Config&gt;::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p><code>true</code> if the account is a staker, <code>false</code> otherwise.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.era_reward_span_index\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1781\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.era_reward_span_index\" class=\"fn\">era_reward_span_index</a>(era: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Calculates the <code>EraRewardSpan</code> index for the specified era.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unlocking_period\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1792\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unlocking_period\" class=\"fn\">unlocking_period</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Unlocking period expressed in the number of blocks.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_dapp_tier_assignment\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1797\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.get_dapp_tier_assignment\" class=\"fn\">get_dapp_tier_assignment</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/collections/btree/map/struct.BTreeMap.html\" title=\"struct alloc::collections::btree::map::BTreeMap\">BTreeMap</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u16.html\">u16</a>, <a class=\"struct\" href=\"astar_primitives/dapp_staking/struct.RankedTier.html\" title=\"struct astar_primitives::dapp_staking::RankedTier\">RankedTier</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the dApp tier assignment for the current era, based on the current stake amounts.</p>\n</div></details></div></details>",0,"astar_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#678\">source</a><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unbond_and_unstake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unbond_and_unstake\" class=\"fn\">unbond_and_unstake</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    _contract_id: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapper around <em>legacy-like</em> <code>unbond_and_unstake</code>.</p>\n<p>Used to support legacy Ledger users so they can start the unlocking process for their funds.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.withdraw_unbonded\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.withdraw_unbonded\" class=\"fn\">withdraw_unbonded</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapper around <em>legacy-like</em> <code>withdraw_unbonded</code>.</p>\n<p>Used to support legacy Ledger users so they can reclaim unlocked chunks back into\ntheir <em>transferable</em> free balance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.maintenance_mode\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.maintenance_mode\" class=\"fn\">maintenance_mode</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    enabled: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to enable or disable maintenance mode.\nCan only be called by manager origin.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.register\" class=\"fn\">register</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    owner: &lt;T as Config&gt;::AccountId,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to register a new contract for dApp staking.</p>\n<p>If successful, smart contract will be assigned a simple, unique numerical identifier.\nOwner is set to be initial beneficiary &amp; manager of the dApp.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_dapp_reward_beneficiary\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.set_dapp_reward_beneficiary\" class=\"fn\">set_dapp_reward_beneficiary</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    beneficiary: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to modify the reward beneficiary account for a dApp.</p>\n<p>Caller has to be dApp owner.\nIf set to <code>None</code>, rewards will be deposited to the dApp owner.\nAfter this call, all existing &amp; future rewards will be paid out to the beneficiary.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_dapp_owner\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.set_dapp_owner\" class=\"fn\">set_dapp_owner</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    new_owner: &lt;T as Config&gt;::AccountId,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to change dApp owner.</p>\n<p>Can be called by dApp owner or dApp staking manager origin.\nThis is useful in two cases:</p>\n<ol>\n<li>when the dApp owner account is compromised, manager can change the owner to a new account</li>\n<li>if project wants to transfer ownership to a new account (DAO, multisig, etc.).</li>\n</ol>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unregister\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unregister\" class=\"fn\">unregister</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Unregister dApp from dApp staking protocol, making it ineligible for future rewards.\nThis doesnโt remove the dApp completely from the system just yet, but it can no longer be used for staking.</p>\n<p>Can be called by dApp staking manager origin.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lock\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.lock\" class=\"fn\">lock</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Locks additional funds into dApp staking.</p>\n<p>In case caller account doesnโt have sufficient balance to cover the specified amount, everything is locked.\nAfter adjustment, lock amount must be greater than zero and in total must be equal or greater than the minimum locked amount.</p>\n<p>Locked amount can immediately be used for staking.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unlock\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unlock\" class=\"fn\">unlock</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to start the unlocking process for the specified amount.</p>\n<p>Only the amount that isnโt actively used for staking can be unlocked.\nIf the amount is greater than the available amount for unlocking, everything is unlocked.\nIf the remaining locked amount would take the account below the minimum locked amount, everything is unlocked.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_unlocked\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_unlocked\" class=\"fn\">claim_unlocked</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Claims all of fully unlocked chunks, removing the lock from them.</p>\n</div></details><section id=\"method.relock_unlocking\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.relock_unlocking\" class=\"fn\">relock_unlocking</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.stake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.stake\" class=\"fn\">stake</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Stake the specified amount on a smart contract.\nThe precise <code>amount</code> specified <strong>must</strong> be available for staking.\nThe total amount staked on a dApp must be greater than the minimum required value.</p>\n<p>Depending on the period type, appropriate stake amount will be updated. During <code>Voting</code> subperiod, <code>voting</code> stake amount is updated,\nand same for <code>Build&amp;Earn</code> subperiod.</p>\n<p>Staked amount is only eligible for rewards from the next era onwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unstake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unstake\" class=\"fn\">unstake</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Unstake the specified amount from a smart contract.\nThe <code>amount</code> specified <strong>must</strong> not exceed whatโs staked, otherwise the call will fail.</p>\n<p>If unstaking the specified <code>amount</code> would take staker below the minimum stake threshold, everything is unstaked.</p>\n<p>Depending on the period type, appropriate stake amount will be updated.\nIn case amount is unstaked during <code>Voting</code> subperiod, the <code>voting</code> amount is reduced.\nIn case amount is unstaked during <code>Build&amp;Earn</code> subperiod, first the <code>build_and_earn</code> is reduced,\nand any spillover is subtracted from the <code>voting</code> amount.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_staker_rewards\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_staker_rewards\" class=\"fn\">claim_staker_rewards</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Claims some staker rewards, if user has any.\nIn the case of a successful call, at least one era will be claimed, with the possibility of multiple claims happening.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_bonus_reward\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_bonus_reward\" class=\"fn\">claim_bonus_reward</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to claim bonus reward for a smart contract, if eligible.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_dapp_reward\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_dapp_reward\" class=\"fn\">claim_dapp_reward</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    era: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to claim dApp reward for the specified era.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unstake_from_unregistered\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unstake_from_unregistered\" class=\"fn\">unstake_from_unregistered</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to unstake funds from a contract that was unregistered after an account staked on it.\nThis is required if staker wants to re-stake these funds on another active contract during the ongoing period.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cleanup_expired_entries\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.cleanup_expired_entries\" class=\"fn\">cleanup_expired_entries</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Cleanup expired stake entries for the contract.</p>\n<p>Entry is considered to be expired if:</p>\n<ol>\n<li>Itโs from a past period &amp; the account did not maintain an eligible bonus status, meaning thereโs no claimable bonus reward.</li>\n<li>Itโs from a period older than the oldest claimable period, regardless of whether the account had an eligible bonus status or not.</li>\n</ol>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.force\" class=\"fn\">force</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    forcing_type: <a class=\"enum\" href=\"pallet_dapp_staking/types/enum.ForcingType.html\" title=\"enum pallet_dapp_staking::types::ForcingType\">ForcingType</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to force a change of era or subperiod.\nThe effect isnโt immediate but will happen on the next block.</p>\n<p>Used for testing purposes, when we want to force an era change, or a subperiod change.\nNot intended to be used in production, except in case of unforeseen circumstances.</p>\n<p>Can only be called by the root origin.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_staker_rewards_for\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_staker_rewards_for\" class=\"fn\">claim_staker_rewards_for</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    account: &lt;T as Config&gt;::AccountId,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Claims some staker rewards for the specified account, if they have any.\nIn the case of a successful call, at least one era will be claimed, with the possibility of multiple claims happening.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_bonus_reward_for\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_bonus_reward_for\" class=\"fn\">claim_bonus_reward_for</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    account: &lt;T as Config&gt;::AccountId,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to claim bonus reward for a smart contract on behalf of the specified account, if eligible.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.move_stake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.move_stake\" class=\"fn\">move_stake</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    source_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    destination_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Transfers stake between two smart contracts, ensuring bonus status preservation if eligible.\nEmits a <code>StakeMoved</code> event.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_static_tier_params\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.set_static_tier_params\" class=\"fn\">set_static_tier_params</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    params: <a class=\"struct\" href=\"pallet_dapp_staking/types/struct.TierParameters.html\" title=\"struct pallet_dapp_staking::types::TierParameters\">TierParameters</a>&lt;&lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.NumberOfTiers\" title=\"type pallet_dapp_staking::pallet::Config::NumberOfTiers\">NumberOfTiers</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to set static tier parameters, which are used to calculate tier configuration.\nTier configuration defines tier entry threshold values, number of slots, and reward portions.</p>\n<p>This is a delicate call and great care should be taken when changing these\nvalues since it has a significant impact on the reward system.</p>\n</div></details></div></details>",0,"astar_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; PalletInfoAccess for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.index\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.name_hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">name_hash</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Two128 hash of name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.module_name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.crate_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","astar_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; PalletsInfoAccess for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.count\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of palletsโ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.infos\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the palletsโ information that this type represents.</div></details></div></details>","PalletsInfoAccess","astar_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#262\">source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","astar_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SafeModeNotify-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#2731\">source</a><a href=\"#impl-SafeModeNotify-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; SafeModeNotify for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"docblock\"><p>Implementation of the <code>SafeModeNotify</code> trait for the <code>DappStaking</code> pallet.\nThis integration ensures that the dApp staking protocol transitions to and from\nmaintenance mode when the runtime enters or exits safe mode.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.entered\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#2732\">source</a><a href=\"#method.entered\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">entered</a>()</h4></section></summary><div class='docblock'>Called when the runtime enters safe mode.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exited\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#2736\">source</a><a href=\"#method.exited\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">exited</a>()</h4></section></summary><div class='docblock'>Called when the runtime exits safe mode.</div></details></div></details>","SafeModeNotify","astar_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; StorageInfoTrait for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.storage_info\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","astar_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; WhitelistedStorageKeys for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","astar_runtime::DappStaking"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#101\">source</a><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section>","Eq","astar_runtime::DappStaking"]],
"local_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; BeforeAllRuntimeMigrations for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all_runtime_migrations\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.before_all_runtime_migrations\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all_runtime_migrations</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Something that should happen before runtime migrations are executed.</div></details></div></details>","BeforeAllRuntimeMigrations","local_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#677\">source</a><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; Callable&lt;T&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = <a class=\"enum\" href=\"pallet_dapp_staking/pallet/enum.Call.html\" title=\"enum pallet_dapp_staking::pallet::Call\">Call</a>&lt;T&gt;</h4></section></div></details>","Callable<T>","local_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/clone.rs.html#172\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","local_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","local_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; GetStorageVersion for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.InCodeStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.InCodeStorageVersion\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">InCodeStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This type is generated by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_code_storage_version\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.in_code_storage_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">in_code_storage_version</a>() -&gt; &lt;<a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt; as GetStorageVersion&gt;::InCodeStorageVersion</h4></section></summary><div class='docblock'>Returns the in-code storage version as specified in the\n<a href=\"crate::pallet_macros::storage_version\"><code>storage_version</code></a> attribute, or\n[<code>NoStorageVersionSet</code>] if the attribute is missing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.on_chain_storage_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the storage version of the pallet as last set in the actual on-chain storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>() -&gt; Self::InCodeStorageVersion</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated: This method has been renamed to <code>in_code_storage_version</code> and will be removed after March 2024.</span></div></span><div class='docblock'>DEPRECATED: Use [<code>Self::current_storage_version</code>] instead. <a>Read more</a></div></details></div></details>","GetStorageVersion","local_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#631\">source</a><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#632\">source</a><a href=\"#method.on_initialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    now: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n) -&gt; Weight</h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#637\">source</a><a href=\"#method.on_idle\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    _block: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight,\n) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a blockโs idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#641\">source</a><a href=\"#method.integrity_test\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this palletโs configuration. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(_n: BlockNumber, _weight: &amp;mut WeightMeter)</h4></section></summary><div class='docblock'>A hook to run logic after inherent application. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a โruntime upgradeโ) is detected by the FRAME\n<code>Executive</code> pallet. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main blockchain execution. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","local_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; IntegrityTest for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.integrity_test\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","local_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.offchain_worker\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","local_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_finalize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","local_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnGenesis for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.on_genesis\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","local_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_idle\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight,\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","local_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_initialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","local_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnPoll&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_poll\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    weight: &amp;mut WeightMeter,\n)</h4></section></summary><div class='docblock'>Code to execute every now and then at the beginning of the block after inherent application. <a>Read more</a></div></details></div></details>","OnPoll<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","local_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnRuntimeUpgrade for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","local_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1426\">source</a><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner_unstake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1433-1437\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.inner_unstake\" class=\"fn\">inner_unstake</a>(\n    account: &amp;&lt;T as Config&gt;::AccountId,\n    smart_contract: &amp;&lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"pallet_dapp_staking/types/struct.StakeAmount.html\" title=\"struct pallet_dapp_staking::types::StakeAmount\">StakeAmount</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>), DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Inner <code>unstake</code> functionality for an <strong>active</strong> smart contract.\nIf successful returns the <code>StakeAmount</code> that was unstaked, and the updated bonus status.</p>\n<ul>\n<li>Ensures the contract is still registered.</li>\n<li>Updates staker info, ledger, and contract stake info.</li>\n<li>Returns the unstaked amount and updated bonus status.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner_unstake_from_unregistered\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1548-1551\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.inner_unstake_from_unregistered\" class=\"fn\">inner_unstake_from_unregistered</a>(\n    account: &amp;&lt;T as Config&gt;::AccountId,\n    smart_contract: &amp;&lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"pallet_dapp_staking/types/struct.StakeAmount.html\" title=\"struct pallet_dapp_staking::types::StakeAmount\">StakeAmount</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>), DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Handles unstaking from an <strong>unregistered</strong> smart contract.</p>\n<ul>\n<li>Ensures the contract is no longer active.</li>\n<li>Updates staker info and ledger.</li>\n<li>Returns the unstaked amount and preserves the original bonus status.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner_stake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1624-1629\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.inner_stake\" class=\"fn\">inner_stake</a>(\n    account: &amp;&lt;T as Config&gt;::AccountId,\n    smart_contract: &amp;&lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: <a class=\"struct\" href=\"pallet_dapp_staking/types/struct.StakeAmount.html\" title=\"struct pallet_dapp_staking::types::StakeAmount\">StakeAmount</a>,\n    bonus_status: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Inner <code>stake</code> functionality.</p>\n<p>Specifies the amount in the form of the <code>StakeAmount</code> struct, allowing simultaneous update of both <code>voting</code> and <code>build_and_earn</code> amounts.\nThe <code>bonus_status</code> is used to determine if the staker is still eligible for the bonus reward. This is useful for the <code>move</code> extrinsic.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_staker\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1736\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.is_staker\" class=\"fn\">is_staker</a>(account: &amp;&lt;T as Config&gt;::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p><code>true</code> if the account is a staker, <code>false</code> otherwise.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.era_reward_span_index\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1781\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.era_reward_span_index\" class=\"fn\">era_reward_span_index</a>(era: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Calculates the <code>EraRewardSpan</code> index for the specified era.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unlocking_period\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1792\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unlocking_period\" class=\"fn\">unlocking_period</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Unlocking period expressed in the number of blocks.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_dapp_tier_assignment\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1797\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.get_dapp_tier_assignment\" class=\"fn\">get_dapp_tier_assignment</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/collections/btree/map/struct.BTreeMap.html\" title=\"struct alloc::collections::btree::map::BTreeMap\">BTreeMap</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u16.html\">u16</a>, <a class=\"struct\" href=\"astar_primitives/dapp_staking/struct.RankedTier.html\" title=\"struct astar_primitives::dapp_staking::RankedTier\">RankedTier</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the dApp tier assignment for the current era, based on the current stake amounts.</p>\n</div></details></div></details>",0,"local_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#678\">source</a><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unbond_and_unstake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unbond_and_unstake\" class=\"fn\">unbond_and_unstake</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    _contract_id: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapper around <em>legacy-like</em> <code>unbond_and_unstake</code>.</p>\n<p>Used to support legacy Ledger users so they can start the unlocking process for their funds.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.withdraw_unbonded\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.withdraw_unbonded\" class=\"fn\">withdraw_unbonded</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapper around <em>legacy-like</em> <code>withdraw_unbonded</code>.</p>\n<p>Used to support legacy Ledger users so they can reclaim unlocked chunks back into\ntheir <em>transferable</em> free balance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.maintenance_mode\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.maintenance_mode\" class=\"fn\">maintenance_mode</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    enabled: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to enable or disable maintenance mode.\nCan only be called by manager origin.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.register\" class=\"fn\">register</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    owner: &lt;T as Config&gt;::AccountId,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to register a new contract for dApp staking.</p>\n<p>If successful, smart contract will be assigned a simple, unique numerical identifier.\nOwner is set to be initial beneficiary &amp; manager of the dApp.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_dapp_reward_beneficiary\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.set_dapp_reward_beneficiary\" class=\"fn\">set_dapp_reward_beneficiary</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    beneficiary: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to modify the reward beneficiary account for a dApp.</p>\n<p>Caller has to be dApp owner.\nIf set to <code>None</code>, rewards will be deposited to the dApp owner.\nAfter this call, all existing &amp; future rewards will be paid out to the beneficiary.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_dapp_owner\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.set_dapp_owner\" class=\"fn\">set_dapp_owner</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    new_owner: &lt;T as Config&gt;::AccountId,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to change dApp owner.</p>\n<p>Can be called by dApp owner or dApp staking manager origin.\nThis is useful in two cases:</p>\n<ol>\n<li>when the dApp owner account is compromised, manager can change the owner to a new account</li>\n<li>if project wants to transfer ownership to a new account (DAO, multisig, etc.).</li>\n</ol>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unregister\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unregister\" class=\"fn\">unregister</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Unregister dApp from dApp staking protocol, making it ineligible for future rewards.\nThis doesnโt remove the dApp completely from the system just yet, but it can no longer be used for staking.</p>\n<p>Can be called by dApp staking manager origin.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lock\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.lock\" class=\"fn\">lock</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Locks additional funds into dApp staking.</p>\n<p>In case caller account doesnโt have sufficient balance to cover the specified amount, everything is locked.\nAfter adjustment, lock amount must be greater than zero and in total must be equal or greater than the minimum locked amount.</p>\n<p>Locked amount can immediately be used for staking.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unlock\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unlock\" class=\"fn\">unlock</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to start the unlocking process for the specified amount.</p>\n<p>Only the amount that isnโt actively used for staking can be unlocked.\nIf the amount is greater than the available amount for unlocking, everything is unlocked.\nIf the remaining locked amount would take the account below the minimum locked amount, everything is unlocked.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_unlocked\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_unlocked\" class=\"fn\">claim_unlocked</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Claims all of fully unlocked chunks, removing the lock from them.</p>\n</div></details><section id=\"method.relock_unlocking\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.relock_unlocking\" class=\"fn\">relock_unlocking</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.stake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.stake\" class=\"fn\">stake</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Stake the specified amount on a smart contract.\nThe precise <code>amount</code> specified <strong>must</strong> be available for staking.\nThe total amount staked on a dApp must be greater than the minimum required value.</p>\n<p>Depending on the period type, appropriate stake amount will be updated. During <code>Voting</code> subperiod, <code>voting</code> stake amount is updated,\nand same for <code>Build&amp;Earn</code> subperiod.</p>\n<p>Staked amount is only eligible for rewards from the next era onwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unstake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unstake\" class=\"fn\">unstake</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Unstake the specified amount from a smart contract.\nThe <code>amount</code> specified <strong>must</strong> not exceed whatโs staked, otherwise the call will fail.</p>\n<p>If unstaking the specified <code>amount</code> would take staker below the minimum stake threshold, everything is unstaked.</p>\n<p>Depending on the period type, appropriate stake amount will be updated.\nIn case amount is unstaked during <code>Voting</code> subperiod, the <code>voting</code> amount is reduced.\nIn case amount is unstaked during <code>Build&amp;Earn</code> subperiod, first the <code>build_and_earn</code> is reduced,\nand any spillover is subtracted from the <code>voting</code> amount.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_staker_rewards\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_staker_rewards\" class=\"fn\">claim_staker_rewards</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Claims some staker rewards, if user has any.\nIn the case of a successful call, at least one era will be claimed, with the possibility of multiple claims happening.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_bonus_reward\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_bonus_reward\" class=\"fn\">claim_bonus_reward</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to claim bonus reward for a smart contract, if eligible.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_dapp_reward\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_dapp_reward\" class=\"fn\">claim_dapp_reward</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    era: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to claim dApp reward for the specified era.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unstake_from_unregistered\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unstake_from_unregistered\" class=\"fn\">unstake_from_unregistered</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to unstake funds from a contract that was unregistered after an account staked on it.\nThis is required if staker wants to re-stake these funds on another active contract during the ongoing period.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cleanup_expired_entries\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.cleanup_expired_entries\" class=\"fn\">cleanup_expired_entries</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Cleanup expired stake entries for the contract.</p>\n<p>Entry is considered to be expired if:</p>\n<ol>\n<li>Itโs from a past period &amp; the account did not maintain an eligible bonus status, meaning thereโs no claimable bonus reward.</li>\n<li>Itโs from a period older than the oldest claimable period, regardless of whether the account had an eligible bonus status or not.</li>\n</ol>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.force\" class=\"fn\">force</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    forcing_type: <a class=\"enum\" href=\"pallet_dapp_staking/types/enum.ForcingType.html\" title=\"enum pallet_dapp_staking::types::ForcingType\">ForcingType</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to force a change of era or subperiod.\nThe effect isnโt immediate but will happen on the next block.</p>\n<p>Used for testing purposes, when we want to force an era change, or a subperiod change.\nNot intended to be used in production, except in case of unforeseen circumstances.</p>\n<p>Can only be called by the root origin.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_staker_rewards_for\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_staker_rewards_for\" class=\"fn\">claim_staker_rewards_for</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    account: &lt;T as Config&gt;::AccountId,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Claims some staker rewards for the specified account, if they have any.\nIn the case of a successful call, at least one era will be claimed, with the possibility of multiple claims happening.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_bonus_reward_for\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_bonus_reward_for\" class=\"fn\">claim_bonus_reward_for</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    account: &lt;T as Config&gt;::AccountId,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to claim bonus reward for a smart contract on behalf of the specified account, if eligible.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.move_stake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.move_stake\" class=\"fn\">move_stake</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    source_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    destination_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Transfers stake between two smart contracts, ensuring bonus status preservation if eligible.\nEmits a <code>StakeMoved</code> event.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_static_tier_params\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.set_static_tier_params\" class=\"fn\">set_static_tier_params</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    params: <a class=\"struct\" href=\"pallet_dapp_staking/types/struct.TierParameters.html\" title=\"struct pallet_dapp_staking::types::TierParameters\">TierParameters</a>&lt;&lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.NumberOfTiers\" title=\"type pallet_dapp_staking::pallet::Config::NumberOfTiers\">NumberOfTiers</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to set static tier parameters, which are used to calculate tier configuration.\nTier configuration defines tier entry threshold values, number of slots, and reward portions.</p>\n<p>This is a delicate call and great care should be taken when changing these\nvalues since it has a significant impact on the reward system.</p>\n</div></details></div></details>",0,"local_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; PalletInfoAccess for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.index\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.name_hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">name_hash</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Two128 hash of name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.module_name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.crate_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","local_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; PalletsInfoAccess for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.count\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of palletsโ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.infos\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the palletsโ information that this type represents.</div></details></div></details>","PalletsInfoAccess","local_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#262\">source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","local_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SafeModeNotify-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#2731\">source</a><a href=\"#impl-SafeModeNotify-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; SafeModeNotify for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"docblock\"><p>Implementation of the <code>SafeModeNotify</code> trait for the <code>DappStaking</code> pallet.\nThis integration ensures that the dApp staking protocol transitions to and from\nmaintenance mode when the runtime enters or exits safe mode.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.entered\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#2732\">source</a><a href=\"#method.entered\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">entered</a>()</h4></section></summary><div class='docblock'>Called when the runtime enters safe mode.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exited\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#2736\">source</a><a href=\"#method.exited\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">exited</a>()</h4></section></summary><div class='docblock'>Called when the runtime exits safe mode.</div></details></div></details>","SafeModeNotify","local_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; StorageInfoTrait for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.storage_info\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","local_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; WhitelistedStorageKeys for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","local_runtime::DappStaking"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#101\">source</a><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section>","Eq","local_runtime::DappStaking"]],
"pallet_dapp_staking":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt; BeforeAllRuntimeMigrations for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all_runtime_migrations\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.before_all_runtime_migrations\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all_runtime_migrations</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Something that should happen before runtime migrations are executed.</div></details></div></details>","BeforeAllRuntimeMigrations","pallet_dapp_staking::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#677\">source</a><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt; Callable&lt;T&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = <a class=\"enum\" href=\"pallet_dapp_staking/pallet/enum.Call.html\" title=\"enum pallet_dapp_staking::pallet::Call\">Call</a>&lt;T&gt;</h4></section></div></details>","Callable<T>","pallet_dapp_staking::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/clone.rs.html#172\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","pallet_dapp_staking::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"pallet_dapp_staking/trait.Debug.html\" title=\"trait pallet_dapp_staking::Debug\">Debug</a> for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"pallet_dapp_staking/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"pallet_dapp_staking/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","pallet_dapp_staking::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt; GetStorageVersion for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.InCodeStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.InCodeStorageVersion\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">InCodeStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This type is generated by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_code_storage_version\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.in_code_storage_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">in_code_storage_version</a>() -&gt; Self::InCodeStorageVersion</h4></section></summary><div class='docblock'>Returns the in-code storage version as specified in the\n<a href=\"crate::pallet_macros::storage_version\"><code>storage_version</code></a> attribute, or\n[<code>NoStorageVersionSet</code>] if the attribute is missing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.on_chain_storage_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the storage version of the pallet as last set in the actual on-chain storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>() -&gt; Self::InCodeStorageVersion</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated: This method has been renamed to <code>in_code_storage_version</code> and will be removed after March 2024.</span></div></span><div class='docblock'>DEPRECATED: Use [<code>Self::current_storage_version</code>] instead. <a>Read more</a></div></details></div></details>","GetStorageVersion","pallet_dapp_staking::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#631-667\">source</a><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#632-635\">source</a><a href=\"#method.on_initialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(now: BlockNumberFor&lt;T&gt;) -&gt; Weight</h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#637-639\">source</a><a href=\"#method.on_idle\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_block: BlockNumberFor&lt;T&gt;, remaining_weight: Weight) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a blockโs idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#641-660\">source</a><a href=\"#method.integrity_test\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this palletโs configuration. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(_n: BlockNumber, _weight: &amp;mut WeightMeter)</h4></section></summary><div class='docblock'>A hook to run logic after inherent application. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a โruntime upgradeโ) is detected by the FRAME\n<code>Executive</code> pallet. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main blockchain execution. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","pallet_dapp_staking::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt; IntegrityTest for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.integrity_test\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","pallet_dapp_staking::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.offchain_worker\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(n: BlockNumberFor&lt;T&gt;)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","pallet_dapp_staking::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_finalize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(n: BlockNumberFor&lt;T&gt;)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","pallet_dapp_staking::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt; OnGenesis for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.on_genesis\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","pallet_dapp_staking::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_idle\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(n: BlockNumberFor&lt;T&gt;, remaining_weight: Weight) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","pallet_dapp_staking::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_initialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(n: BlockNumberFor&lt;T&gt;) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","pallet_dapp_staking::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt; OnPoll&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_poll\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(n: BlockNumberFor&lt;T&gt;, weight: &amp;mut WeightMeter)</h4></section></summary><div class='docblock'>Code to execute every now and then at the beginning of the block after inherent application. <a>Read more</a></div></details></div></details>","OnPoll<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","pallet_dapp_staking::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt; OnRuntimeUpgrade for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","pallet_dapp_staking::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1426-2726\">source</a><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt; <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner_unstake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1433-1541\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.inner_unstake\" class=\"fn\">inner_unstake</a>(\n    account: &amp;T::AccountId,\n    smart_contract: &amp;T::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: Balance,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"pallet_dapp_staking/struct.StakeAmount.html\" title=\"struct pallet_dapp_staking::StakeAmount\">StakeAmount</a>, <a class=\"type\" href=\"pallet_dapp_staking/type.BonusStatus.html\" title=\"type pallet_dapp_staking::BonusStatus\">BonusStatus</a>), DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Inner <code>unstake</code> functionality for an <strong>active</strong> smart contract.\nIf successful returns the <code>StakeAmount</code> that was unstaked, and the updated bonus status.</p>\n<ul>\n<li>Ensures the contract is still registered.</li>\n<li>Updates staker info, ledger, and contract stake info.</li>\n<li>Returns the unstaked amount and updated bonus status.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner_unstake_from_unregistered\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1548-1618\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.inner_unstake_from_unregistered\" class=\"fn\">inner_unstake_from_unregistered</a>(\n    account: &amp;T::AccountId,\n    smart_contract: &amp;T::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"pallet_dapp_staking/struct.StakeAmount.html\" title=\"struct pallet_dapp_staking::StakeAmount\">StakeAmount</a>, <a class=\"type\" href=\"pallet_dapp_staking/type.BonusStatus.html\" title=\"type pallet_dapp_staking::BonusStatus\">BonusStatus</a>), DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Handles unstaking from an <strong>unregistered</strong> smart contract.</p>\n<ul>\n<li>Ensures the contract is no longer active.</li>\n<li>Updates staker info and ledger.</li>\n<li>Returns the unstaked amount and preserves the original bonus status.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner_stake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1624-1733\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.inner_stake\" class=\"fn\">inner_stake</a>(\n    account: &amp;T::AccountId,\n    smart_contract: &amp;T::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: <a class=\"struct\" href=\"pallet_dapp_staking/struct.StakeAmount.html\" title=\"struct pallet_dapp_staking::StakeAmount\">StakeAmount</a>,\n    bonus_status: <a class=\"type\" href=\"pallet_dapp_staking/type.BonusStatus.html\" title=\"type pallet_dapp_staking::BonusStatus\">BonusStatus</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Inner <code>stake</code> functionality.</p>\n<p>Specifies the amount in the form of the <code>StakeAmount</code> struct, allowing simultaneous update of both <code>voting</code> and <code>build_and_earn</code> amounts.\nThe <code>bonus_status</code> is used to determine if the staker is still eligible for the bonus reward. This is useful for the <code>move</code> extrinsic.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_staker\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1736-1738\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.is_staker\" class=\"fn\">is_staker</a>(account: &amp;T::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p><code>true</code> if the account is a staker, <code>false</code> otherwise.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.era_reward_span_index\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1781-1783\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.era_reward_span_index\" class=\"fn\">era_reward_span_index</a>(era: EraNumber) -&gt; EraNumber</h4></section></summary><div class=\"docblock\"><p>Calculates the <code>EraRewardSpan</code> index for the specified era.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unlocking_period\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1792-1794\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unlocking_period\" class=\"fn\">unlocking_period</a>() -&gt; BlockNumber</h4></section></summary><div class=\"docblock\"><p>Unlocking period expressed in the number of blocks.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_dapp_tier_assignment\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1797-1807\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.get_dapp_tier_assignment\" class=\"fn\">get_dapp_tier_assignment</a>() -&gt; <a class=\"struct\" href=\"pallet_dapp_staking/struct.BTreeMap.html\" title=\"struct pallet_dapp_staking::BTreeMap\">BTreeMap</a>&lt;DAppId, RankedTier&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the dApp tier assignment for the current era, based on the current stake amounts.</p>\n</div></details></div></details>",0,"pallet_dapp_staking::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#678-1424\">source</a><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt; <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unbond_and_unstake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unbond_and_unstake\" class=\"fn\">unbond_and_unstake</a>(\n    origin: OriginFor&lt;T&gt;,\n    _contract_id: T::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    value: Balance,\n) -&gt; DispatchResult</h4></section></summary><div class=\"docblock\"><p>Wrapper around <em>legacy-like</em> <code>unbond_and_unstake</code>.</p>\n<p>Used to support legacy Ledger users so they can start the unlocking process for their funds.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.withdraw_unbonded\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.withdraw_unbonded\" class=\"fn\">withdraw_unbonded</a>(origin: OriginFor&lt;T&gt;) -&gt; DispatchResultWithPostInfo</h4></section></summary><div class=\"docblock\"><p>Wrapper around <em>legacy-like</em> <code>withdraw_unbonded</code>.</p>\n<p>Used to support legacy Ledger users so they can reclaim unlocked chunks back into\ntheir <em>transferable</em> free balance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.maintenance_mode\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.maintenance_mode\" class=\"fn\">maintenance_mode</a>(origin: OriginFor&lt;T&gt;, enabled: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>) -&gt; DispatchResult</h4></section></summary><div class=\"docblock\"><p>Used to enable or disable maintenance mode.\nCan only be called by manager origin.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.register\" class=\"fn\">register</a>(\n    origin: OriginFor&lt;T&gt;,\n    owner: T::AccountId,\n    smart_contract: T::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; DispatchResult</h4></section></summary><div class=\"docblock\"><p>Used to register a new contract for dApp staking.</p>\n<p>If successful, smart contract will be assigned a simple, unique numerical identifier.\nOwner is set to be initial beneficiary &amp; manager of the dApp.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_dapp_reward_beneficiary\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.set_dapp_reward_beneficiary\" class=\"fn\">set_dapp_reward_beneficiary</a>(\n    origin: OriginFor&lt;T&gt;,\n    smart_contract: T::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    beneficiary: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T::AccountId&gt;,\n) -&gt; DispatchResult</h4></section></summary><div class=\"docblock\"><p>Used to modify the reward beneficiary account for a dApp.</p>\n<p>Caller has to be dApp owner.\nIf set to <code>None</code>, rewards will be deposited to the dApp owner.\nAfter this call, all existing &amp; future rewards will be paid out to the beneficiary.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_dapp_owner\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.set_dapp_owner\" class=\"fn\">set_dapp_owner</a>(\n    origin: OriginFor&lt;T&gt;,\n    smart_contract: T::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    new_owner: T::AccountId,\n) -&gt; DispatchResult</h4></section></summary><div class=\"docblock\"><p>Used to change dApp owner.</p>\n<p>Can be called by dApp owner or dApp staking manager origin.\nThis is useful in two cases:</p>\n<ol>\n<li>when the dApp owner account is compromised, manager can change the owner to a new account</li>\n<li>if project wants to transfer ownership to a new account (DAO, multisig, etc.).</li>\n</ol>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unregister\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unregister\" class=\"fn\">unregister</a>(\n    origin: OriginFor&lt;T&gt;,\n    smart_contract: T::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; DispatchResult</h4></section></summary><div class=\"docblock\"><p>Unregister dApp from dApp staking protocol, making it ineligible for future rewards.\nThis doesnโt remove the dApp completely from the system just yet, but it can no longer be used for staking.</p>\n<p>Can be called by dApp staking manager origin.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lock\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.lock\" class=\"fn\">lock</a>(origin: OriginFor&lt;T&gt;, amount: Balance) -&gt; DispatchResultWithPostInfo</h4></section></summary><div class=\"docblock\"><p>Locks additional funds into dApp staking.</p>\n<p>In case caller account doesnโt have sufficient balance to cover the specified amount, everything is locked.\nAfter adjustment, lock amount must be greater than zero and in total must be equal or greater than the minimum locked amount.</p>\n<p>Locked amount can immediately be used for staking.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unlock\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unlock\" class=\"fn\">unlock</a>(origin: OriginFor&lt;T&gt;, amount: Balance) -&gt; DispatchResult</h4></section></summary><div class=\"docblock\"><p>Attempts to start the unlocking process for the specified amount.</p>\n<p>Only the amount that isnโt actively used for staking can be unlocked.\nIf the amount is greater than the available amount for unlocking, everything is unlocked.\nIf the remaining locked amount would take the account below the minimum locked amount, everything is unlocked.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_unlocked\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_unlocked\" class=\"fn\">claim_unlocked</a>(origin: OriginFor&lt;T&gt;) -&gt; DispatchResultWithPostInfo</h4></section></summary><div class=\"docblock\"><p>Claims all of fully unlocked chunks, removing the lock from them.</p>\n</div></details><section id=\"method.relock_unlocking\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.relock_unlocking\" class=\"fn\">relock_unlocking</a>(origin: OriginFor&lt;T&gt;) -&gt; DispatchResult</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.stake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.stake\" class=\"fn\">stake</a>(\n    origin: OriginFor&lt;T&gt;,\n    smart_contract: T::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: Balance,\n) -&gt; DispatchResult</h4></section></summary><div class=\"docblock\"><p>Stake the specified amount on a smart contract.\nThe precise <code>amount</code> specified <strong>must</strong> be available for staking.\nThe total amount staked on a dApp must be greater than the minimum required value.</p>\n<p>Depending on the period type, appropriate stake amount will be updated. During <code>Voting</code> subperiod, <code>voting</code> stake amount is updated,\nand same for <code>Build&amp;Earn</code> subperiod.</p>\n<p>Staked amount is only eligible for rewards from the next era onwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unstake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unstake\" class=\"fn\">unstake</a>(\n    origin: OriginFor&lt;T&gt;,\n    smart_contract: T::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: Balance,\n) -&gt; DispatchResult</h4></section></summary><div class=\"docblock\"><p>Unstake the specified amount from a smart contract.\nThe <code>amount</code> specified <strong>must</strong> not exceed whatโs staked, otherwise the call will fail.</p>\n<p>If unstaking the specified <code>amount</code> would take staker below the minimum stake threshold, everything is unstaked.</p>\n<p>Depending on the period type, appropriate stake amount will be updated.\nIn case amount is unstaked during <code>Voting</code> subperiod, the <code>voting</code> amount is reduced.\nIn case amount is unstaked during <code>Build&amp;Earn</code> subperiod, first the <code>build_and_earn</code> is reduced,\nand any spillover is subtracted from the <code>voting</code> amount.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_staker_rewards\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_staker_rewards\" class=\"fn\">claim_staker_rewards</a>(origin: OriginFor&lt;T&gt;) -&gt; DispatchResultWithPostInfo</h4></section></summary><div class=\"docblock\"><p>Claims some staker rewards, if user has any.\nIn the case of a successful call, at least one era will be claimed, with the possibility of multiple claims happening.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_bonus_reward\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_bonus_reward\" class=\"fn\">claim_bonus_reward</a>(\n    origin: OriginFor&lt;T&gt;,\n    smart_contract: T::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; DispatchResult</h4></section></summary><div class=\"docblock\"><p>Used to claim bonus reward for a smart contract, if eligible.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_dapp_reward\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_dapp_reward\" class=\"fn\">claim_dapp_reward</a>(\n    origin: OriginFor&lt;T&gt;,\n    smart_contract: T::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    era: EraNumber,\n) -&gt; DispatchResult</h4></section></summary><div class=\"docblock\"><p>Used to claim dApp reward for the specified era.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unstake_from_unregistered\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unstake_from_unregistered\" class=\"fn\">unstake_from_unregistered</a>(\n    origin: OriginFor&lt;T&gt;,\n    smart_contract: T::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; DispatchResult</h4></section></summary><div class=\"docblock\"><p>Used to unstake funds from a contract that was unregistered after an account staked on it.\nThis is required if staker wants to re-stake these funds on another active contract during the ongoing period.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cleanup_expired_entries\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.cleanup_expired_entries\" class=\"fn\">cleanup_expired_entries</a>(\n    origin: OriginFor&lt;T&gt;,\n) -&gt; DispatchResultWithPostInfo</h4></section></summary><div class=\"docblock\"><p>Cleanup expired stake entries for the contract.</p>\n<p>Entry is considered to be expired if:</p>\n<ol>\n<li>Itโs from a past period &amp; the account did not maintain an eligible bonus status, meaning thereโs no claimable bonus reward.</li>\n<li>Itโs from a period older than the oldest claimable period, regardless of whether the account had an eligible bonus status or not.</li>\n</ol>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.force\" class=\"fn\">force</a>(origin: OriginFor&lt;T&gt;, forcing_type: <a class=\"enum\" href=\"pallet_dapp_staking/enum.ForcingType.html\" title=\"enum pallet_dapp_staking::ForcingType\">ForcingType</a>) -&gt; DispatchResult</h4></section></summary><div class=\"docblock\"><p>Used to force a change of era or subperiod.\nThe effect isnโt immediate but will happen on the next block.</p>\n<p>Used for testing purposes, when we want to force an era change, or a subperiod change.\nNot intended to be used in production, except in case of unforeseen circumstances.</p>\n<p>Can only be called by the root origin.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_staker_rewards_for\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_staker_rewards_for\" class=\"fn\">claim_staker_rewards_for</a>(\n    origin: OriginFor&lt;T&gt;,\n    account: T::AccountId,\n) -&gt; DispatchResultWithPostInfo</h4></section></summary><div class=\"docblock\"><p>Claims some staker rewards for the specified account, if they have any.\nIn the case of a successful call, at least one era will be claimed, with the possibility of multiple claims happening.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_bonus_reward_for\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_bonus_reward_for\" class=\"fn\">claim_bonus_reward_for</a>(\n    origin: OriginFor&lt;T&gt;,\n    account: T::AccountId,\n    smart_contract: T::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; DispatchResult</h4></section></summary><div class=\"docblock\"><p>Used to claim bonus reward for a smart contract on behalf of the specified account, if eligible.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.move_stake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.move_stake\" class=\"fn\">move_stake</a>(\n    origin: OriginFor&lt;T&gt;,\n    source_contract: T::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    destination_contract: T::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: Balance,\n) -&gt; DispatchResultWithPostInfo</h4></section></summary><div class=\"docblock\"><p>Transfers stake between two smart contracts, ensuring bonus status preservation if eligible.\nEmits a <code>StakeMoved</code> event.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_static_tier_params\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.set_static_tier_params\" class=\"fn\">set_static_tier_params</a>(\n    origin: OriginFor&lt;T&gt;,\n    params: <a class=\"struct\" href=\"pallet_dapp_staking/struct.TierParameters.html\" title=\"struct pallet_dapp_staking::TierParameters\">TierParameters</a>&lt;T::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.NumberOfTiers\" title=\"type pallet_dapp_staking::pallet::Config::NumberOfTiers\">NumberOfTiers</a>&gt;,\n) -&gt; DispatchResult</h4></section></summary><div class=\"docblock\"><p>Used to set static tier parameters, which are used to calculate tier configuration.\nTier configuration defines tier entry threshold values, number of slots, and reward portions.</p>\n<p>This is a delicate call and great care should be taken when changing these\nvalues since it has a significant impact on the reward system.</p>\n</div></details></div></details>",0,"pallet_dapp_staking::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt; PalletInfoAccess for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.index\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.name_hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">name_hash</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Two128 hash of name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.module_name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.crate_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","pallet_dapp_staking::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt; PalletsInfoAccess for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.count\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of palletsโ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.infos\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"pallet_dapp_staking/struct.Vec.html\" title=\"struct pallet_dapp_staking::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the palletsโ information that this type represents.</div></details></div></details>","PalletsInfoAccess","pallet_dapp_staking::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#262\">source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","pallet_dapp_staking::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SafeModeNotify-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#2731-2739\">source</a><a href=\"#impl-SafeModeNotify-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt; SafeModeNotify for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"docblock\"><p>Implementation of the <code>SafeModeNotify</code> trait for the <code>DappStaking</code> pallet.\nThis integration ensures that the dApp staking protocol transitions to and from\nmaintenance mode when the runtime enters or exits safe mode.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.entered\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#2732-2734\">source</a><a href=\"#method.entered\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">entered</a>()</h4></section></summary><div class='docblock'>Called when the runtime enters safe mode.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exited\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#2736-2738\">source</a><a href=\"#method.exited\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">exited</a>()</h4></section></summary><div class='docblock'>Called when the runtime exits safe mode.</div></details></div></details>","SafeModeNotify","pallet_dapp_staking::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt; StorageInfoTrait for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.storage_info\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"pallet_dapp_staking/struct.Vec.html\" title=\"struct pallet_dapp_staking::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_dapp_staking::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt; WhitelistedStorageKeys for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"pallet_dapp_staking/struct.Vec.html\" title=\"struct pallet_dapp_staking::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"pallet_dapp_staking/struct.Vec.html\" title=\"struct pallet_dapp_staking::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","pallet_dapp_staking::pallet::Module"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#101\">source</a><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section>","Eq","pallet_dapp_staking::pallet::Module"]],
"shibuya_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; BeforeAllRuntimeMigrations for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all_runtime_migrations\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.before_all_runtime_migrations\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all_runtime_migrations</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Something that should happen before runtime migrations are executed.</div></details></div></details>","BeforeAllRuntimeMigrations","shibuya_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#677\">source</a><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; Callable&lt;T&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = <a class=\"enum\" href=\"pallet_dapp_staking/pallet/enum.Call.html\" title=\"enum pallet_dapp_staking::pallet::Call\">Call</a>&lt;T&gt;</h4></section></div></details>","Callable<T>","shibuya_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/clone.rs.html#172\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","shibuya_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","shibuya_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; GetStorageVersion for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.InCodeStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.InCodeStorageVersion\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">InCodeStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This type is generated by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_code_storage_version\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.in_code_storage_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">in_code_storage_version</a>() -&gt; &lt;<a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt; as GetStorageVersion&gt;::InCodeStorageVersion</h4></section></summary><div class='docblock'>Returns the in-code storage version as specified in the\n<a href=\"crate::pallet_macros::storage_version\"><code>storage_version</code></a> attribute, or\n[<code>NoStorageVersionSet</code>] if the attribute is missing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.on_chain_storage_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the storage version of the pallet as last set in the actual on-chain storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>() -&gt; Self::InCodeStorageVersion</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated: This method has been renamed to <code>in_code_storage_version</code> and will be removed after March 2024.</span></div></span><div class='docblock'>DEPRECATED: Use [<code>Self::current_storage_version</code>] instead. <a>Read more</a></div></details></div></details>","GetStorageVersion","shibuya_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#631\">source</a><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#632\">source</a><a href=\"#method.on_initialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    now: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n) -&gt; Weight</h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#637\">source</a><a href=\"#method.on_idle\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    _block: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight,\n) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a blockโs idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#641\">source</a><a href=\"#method.integrity_test\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this palletโs configuration. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(_n: BlockNumber, _weight: &amp;mut WeightMeter)</h4></section></summary><div class='docblock'>A hook to run logic after inherent application. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a โruntime upgradeโ) is detected by the FRAME\n<code>Executive</code> pallet. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main blockchain execution. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","shibuya_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; IntegrityTest for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.integrity_test\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","shibuya_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.offchain_worker\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","shibuya_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_finalize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","shibuya_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnGenesis for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.on_genesis\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","shibuya_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_idle\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight,\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","shibuya_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_initialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","shibuya_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnPoll&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_poll\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    weight: &amp;mut WeightMeter,\n)</h4></section></summary><div class='docblock'>Code to execute every now and then at the beginning of the block after inherent application. <a>Read more</a></div></details></div></details>","OnPoll<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","shibuya_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnRuntimeUpgrade for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","shibuya_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1426\">source</a><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner_unstake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1433-1437\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.inner_unstake\" class=\"fn\">inner_unstake</a>(\n    account: &amp;&lt;T as Config&gt;::AccountId,\n    smart_contract: &amp;&lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"pallet_dapp_staking/types/struct.StakeAmount.html\" title=\"struct pallet_dapp_staking::types::StakeAmount\">StakeAmount</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>), DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Inner <code>unstake</code> functionality for an <strong>active</strong> smart contract.\nIf successful returns the <code>StakeAmount</code> that was unstaked, and the updated bonus status.</p>\n<ul>\n<li>Ensures the contract is still registered.</li>\n<li>Updates staker info, ledger, and contract stake info.</li>\n<li>Returns the unstaked amount and updated bonus status.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner_unstake_from_unregistered\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1548-1551\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.inner_unstake_from_unregistered\" class=\"fn\">inner_unstake_from_unregistered</a>(\n    account: &amp;&lt;T as Config&gt;::AccountId,\n    smart_contract: &amp;&lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"pallet_dapp_staking/types/struct.StakeAmount.html\" title=\"struct pallet_dapp_staking::types::StakeAmount\">StakeAmount</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>), DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Handles unstaking from an <strong>unregistered</strong> smart contract.</p>\n<ul>\n<li>Ensures the contract is no longer active.</li>\n<li>Updates staker info and ledger.</li>\n<li>Returns the unstaked amount and preserves the original bonus status.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner_stake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1624-1629\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.inner_stake\" class=\"fn\">inner_stake</a>(\n    account: &amp;&lt;T as Config&gt;::AccountId,\n    smart_contract: &amp;&lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: <a class=\"struct\" href=\"pallet_dapp_staking/types/struct.StakeAmount.html\" title=\"struct pallet_dapp_staking::types::StakeAmount\">StakeAmount</a>,\n    bonus_status: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Inner <code>stake</code> functionality.</p>\n<p>Specifies the amount in the form of the <code>StakeAmount</code> struct, allowing simultaneous update of both <code>voting</code> and <code>build_and_earn</code> amounts.\nThe <code>bonus_status</code> is used to determine if the staker is still eligible for the bonus reward. This is useful for the <code>move</code> extrinsic.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_staker\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1736\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.is_staker\" class=\"fn\">is_staker</a>(account: &amp;&lt;T as Config&gt;::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p><code>true</code> if the account is a staker, <code>false</code> otherwise.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.era_reward_span_index\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1781\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.era_reward_span_index\" class=\"fn\">era_reward_span_index</a>(era: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Calculates the <code>EraRewardSpan</code> index for the specified era.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unlocking_period\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1792\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unlocking_period\" class=\"fn\">unlocking_period</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Unlocking period expressed in the number of blocks.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_dapp_tier_assignment\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1797\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.get_dapp_tier_assignment\" class=\"fn\">get_dapp_tier_assignment</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/collections/btree/map/struct.BTreeMap.html\" title=\"struct alloc::collections::btree::map::BTreeMap\">BTreeMap</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u16.html\">u16</a>, <a class=\"struct\" href=\"astar_primitives/dapp_staking/struct.RankedTier.html\" title=\"struct astar_primitives::dapp_staking::RankedTier\">RankedTier</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the dApp tier assignment for the current era, based on the current stake amounts.</p>\n</div></details></div></details>",0,"shibuya_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#678\">source</a><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unbond_and_unstake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unbond_and_unstake\" class=\"fn\">unbond_and_unstake</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    _contract_id: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapper around <em>legacy-like</em> <code>unbond_and_unstake</code>.</p>\n<p>Used to support legacy Ledger users so they can start the unlocking process for their funds.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.withdraw_unbonded\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.withdraw_unbonded\" class=\"fn\">withdraw_unbonded</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapper around <em>legacy-like</em> <code>withdraw_unbonded</code>.</p>\n<p>Used to support legacy Ledger users so they can reclaim unlocked chunks back into\ntheir <em>transferable</em> free balance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.maintenance_mode\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.maintenance_mode\" class=\"fn\">maintenance_mode</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    enabled: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to enable or disable maintenance mode.\nCan only be called by manager origin.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.register\" class=\"fn\">register</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    owner: &lt;T as Config&gt;::AccountId,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to register a new contract for dApp staking.</p>\n<p>If successful, smart contract will be assigned a simple, unique numerical identifier.\nOwner is set to be initial beneficiary &amp; manager of the dApp.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_dapp_reward_beneficiary\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.set_dapp_reward_beneficiary\" class=\"fn\">set_dapp_reward_beneficiary</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    beneficiary: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to modify the reward beneficiary account for a dApp.</p>\n<p>Caller has to be dApp owner.\nIf set to <code>None</code>, rewards will be deposited to the dApp owner.\nAfter this call, all existing &amp; future rewards will be paid out to the beneficiary.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_dapp_owner\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.set_dapp_owner\" class=\"fn\">set_dapp_owner</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    new_owner: &lt;T as Config&gt;::AccountId,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to change dApp owner.</p>\n<p>Can be called by dApp owner or dApp staking manager origin.\nThis is useful in two cases:</p>\n<ol>\n<li>when the dApp owner account is compromised, manager can change the owner to a new account</li>\n<li>if project wants to transfer ownership to a new account (DAO, multisig, etc.).</li>\n</ol>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unregister\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unregister\" class=\"fn\">unregister</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Unregister dApp from dApp staking protocol, making it ineligible for future rewards.\nThis doesnโt remove the dApp completely from the system just yet, but it can no longer be used for staking.</p>\n<p>Can be called by dApp staking manager origin.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lock\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.lock\" class=\"fn\">lock</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Locks additional funds into dApp staking.</p>\n<p>In case caller account doesnโt have sufficient balance to cover the specified amount, everything is locked.\nAfter adjustment, lock amount must be greater than zero and in total must be equal or greater than the minimum locked amount.</p>\n<p>Locked amount can immediately be used for staking.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unlock\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unlock\" class=\"fn\">unlock</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to start the unlocking process for the specified amount.</p>\n<p>Only the amount that isnโt actively used for staking can be unlocked.\nIf the amount is greater than the available amount for unlocking, everything is unlocked.\nIf the remaining locked amount would take the account below the minimum locked amount, everything is unlocked.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_unlocked\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_unlocked\" class=\"fn\">claim_unlocked</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Claims all of fully unlocked chunks, removing the lock from them.</p>\n</div></details><section id=\"method.relock_unlocking\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.relock_unlocking\" class=\"fn\">relock_unlocking</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.stake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.stake\" class=\"fn\">stake</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Stake the specified amount on a smart contract.\nThe precise <code>amount</code> specified <strong>must</strong> be available for staking.\nThe total amount staked on a dApp must be greater than the minimum required value.</p>\n<p>Depending on the period type, appropriate stake amount will be updated. During <code>Voting</code> subperiod, <code>voting</code> stake amount is updated,\nand same for <code>Build&amp;Earn</code> subperiod.</p>\n<p>Staked amount is only eligible for rewards from the next era onwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unstake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unstake\" class=\"fn\">unstake</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Unstake the specified amount from a smart contract.\nThe <code>amount</code> specified <strong>must</strong> not exceed whatโs staked, otherwise the call will fail.</p>\n<p>If unstaking the specified <code>amount</code> would take staker below the minimum stake threshold, everything is unstaked.</p>\n<p>Depending on the period type, appropriate stake amount will be updated.\nIn case amount is unstaked during <code>Voting</code> subperiod, the <code>voting</code> amount is reduced.\nIn case amount is unstaked during <code>Build&amp;Earn</code> subperiod, first the <code>build_and_earn</code> is reduced,\nand any spillover is subtracted from the <code>voting</code> amount.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_staker_rewards\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_staker_rewards\" class=\"fn\">claim_staker_rewards</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Claims some staker rewards, if user has any.\nIn the case of a successful call, at least one era will be claimed, with the possibility of multiple claims happening.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_bonus_reward\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_bonus_reward\" class=\"fn\">claim_bonus_reward</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to claim bonus reward for a smart contract, if eligible.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_dapp_reward\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_dapp_reward\" class=\"fn\">claim_dapp_reward</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    era: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to claim dApp reward for the specified era.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unstake_from_unregistered\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unstake_from_unregistered\" class=\"fn\">unstake_from_unregistered</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to unstake funds from a contract that was unregistered after an account staked on it.\nThis is required if staker wants to re-stake these funds on another active contract during the ongoing period.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cleanup_expired_entries\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.cleanup_expired_entries\" class=\"fn\">cleanup_expired_entries</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Cleanup expired stake entries for the contract.</p>\n<p>Entry is considered to be expired if:</p>\n<ol>\n<li>Itโs from a past period &amp; the account did not maintain an eligible bonus status, meaning thereโs no claimable bonus reward.</li>\n<li>Itโs from a period older than the oldest claimable period, regardless of whether the account had an eligible bonus status or not.</li>\n</ol>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.force\" class=\"fn\">force</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    forcing_type: <a class=\"enum\" href=\"pallet_dapp_staking/types/enum.ForcingType.html\" title=\"enum pallet_dapp_staking::types::ForcingType\">ForcingType</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to force a change of era or subperiod.\nThe effect isnโt immediate but will happen on the next block.</p>\n<p>Used for testing purposes, when we want to force an era change, or a subperiod change.\nNot intended to be used in production, except in case of unforeseen circumstances.</p>\n<p>Can only be called by the root origin.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_staker_rewards_for\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_staker_rewards_for\" class=\"fn\">claim_staker_rewards_for</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    account: &lt;T as Config&gt;::AccountId,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Claims some staker rewards for the specified account, if they have any.\nIn the case of a successful call, at least one era will be claimed, with the possibility of multiple claims happening.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_bonus_reward_for\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_bonus_reward_for\" class=\"fn\">claim_bonus_reward_for</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    account: &lt;T as Config&gt;::AccountId,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to claim bonus reward for a smart contract on behalf of the specified account, if eligible.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.move_stake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.move_stake\" class=\"fn\">move_stake</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    source_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    destination_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Transfers stake between two smart contracts, ensuring bonus status preservation if eligible.\nEmits a <code>StakeMoved</code> event.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_static_tier_params\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.set_static_tier_params\" class=\"fn\">set_static_tier_params</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    params: <a class=\"struct\" href=\"pallet_dapp_staking/types/struct.TierParameters.html\" title=\"struct pallet_dapp_staking::types::TierParameters\">TierParameters</a>&lt;&lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.NumberOfTiers\" title=\"type pallet_dapp_staking::pallet::Config::NumberOfTiers\">NumberOfTiers</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to set static tier parameters, which are used to calculate tier configuration.\nTier configuration defines tier entry threshold values, number of slots, and reward portions.</p>\n<p>This is a delicate call and great care should be taken when changing these\nvalues since it has a significant impact on the reward system.</p>\n</div></details></div></details>",0,"shibuya_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; PalletInfoAccess for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.index\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.name_hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">name_hash</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Two128 hash of name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.module_name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.crate_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","shibuya_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; PalletsInfoAccess for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.count\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of palletsโ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.infos\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the palletsโ information that this type represents.</div></details></div></details>","PalletsInfoAccess","shibuya_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#262\">source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","shibuya_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SafeModeNotify-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#2731\">source</a><a href=\"#impl-SafeModeNotify-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; SafeModeNotify for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"docblock\"><p>Implementation of the <code>SafeModeNotify</code> trait for the <code>DappStaking</code> pallet.\nThis integration ensures that the dApp staking protocol transitions to and from\nmaintenance mode when the runtime enters or exits safe mode.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.entered\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#2732\">source</a><a href=\"#method.entered\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">entered</a>()</h4></section></summary><div class='docblock'>Called when the runtime enters safe mode.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exited\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#2736\">source</a><a href=\"#method.exited\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">exited</a>()</h4></section></summary><div class='docblock'>Called when the runtime exits safe mode.</div></details></div></details>","SafeModeNotify","shibuya_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; StorageInfoTrait for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.storage_info\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","shibuya_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; WhitelistedStorageKeys for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","shibuya_runtime::DappStaking"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#101\">source</a><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section>","Eq","shibuya_runtime::DappStaking"]],
"shiden_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; BeforeAllRuntimeMigrations for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all_runtime_migrations\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.before_all_runtime_migrations\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all_runtime_migrations</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Something that should happen before runtime migrations are executed.</div></details></div></details>","BeforeAllRuntimeMigrations","shiden_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#677\">source</a><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; Callable&lt;T&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = <a class=\"enum\" href=\"pallet_dapp_staking/pallet/enum.Call.html\" title=\"enum pallet_dapp_staking::pallet::Call\">Call</a>&lt;T&gt;</h4></section></div></details>","Callable<T>","shiden_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/clone.rs.html#172\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","shiden_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","shiden_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; GetStorageVersion for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.InCodeStorageVersion\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.InCodeStorageVersion\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">InCodeStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This type is generated by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_code_storage_version\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.in_code_storage_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">in_code_storage_version</a>() -&gt; &lt;<a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt; as GetStorageVersion&gt;::InCodeStorageVersion</h4></section></summary><div class='docblock'>Returns the in-code storage version as specified in the\n<a href=\"crate::pallet_macros::storage_version\"><code>storage_version</code></a> attribute, or\n[<code>NoStorageVersionSet</code>] if the attribute is missing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.on_chain_storage_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the storage version of the pallet as last set in the actual on-chain storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>() -&gt; Self::InCodeStorageVersion</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated: This method has been renamed to <code>in_code_storage_version</code> and will be removed after March 2024.</span></div></span><div class='docblock'>DEPRECATED: Use [<code>Self::current_storage_version</code>] instead. <a>Read more</a></div></details></div></details>","GetStorageVersion","shiden_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#631\">source</a><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#632\">source</a><a href=\"#method.on_initialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    now: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n) -&gt; Weight</h4></section></summary><div class='docblock'>Block initialization hook. This is called at the very beginning of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#637\">source</a><a href=\"#method.on_idle\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    _block: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight,\n) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a blockโs idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#641\">source</a><a href=\"#method.integrity_test\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this palletโs configuration. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a href=\"#method.on_finalize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Block finalization hook. This is called at the very end of block execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(_n: BlockNumber, _weight: &amp;mut WeightMeter)</h4></section></summary><div class='docblock'>A hook to run logic after inherent application. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a โruntime upgradeโ) is detected by the FRAME\n<code>Executive</code> pallet. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main blockchain execution. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","shiden_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; IntegrityTest for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.integrity_test\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","shiden_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.offchain_worker\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","shiden_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_finalize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","shiden_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnGenesis for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.on_genesis\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","shiden_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_idle\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    remaining_weight: Weight,\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","shiden_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_initialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","shiden_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnPoll&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_poll\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(\n    n: &lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number,\n    weight: &amp;mut WeightMeter,\n)</h4></section></summary><div class='docblock'>Code to execute every now and then at the beginning of the block after inherent application. <a>Read more</a></div></details></div></details>","OnPoll<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","shiden_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; OnRuntimeUpgrade for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#630\">source</a><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","shiden_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1426\">source</a><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner_unstake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1433-1437\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.inner_unstake\" class=\"fn\">inner_unstake</a>(\n    account: &amp;&lt;T as Config&gt;::AccountId,\n    smart_contract: &amp;&lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"pallet_dapp_staking/types/struct.StakeAmount.html\" title=\"struct pallet_dapp_staking::types::StakeAmount\">StakeAmount</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>), DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Inner <code>unstake</code> functionality for an <strong>active</strong> smart contract.\nIf successful returns the <code>StakeAmount</code> that was unstaked, and the updated bonus status.</p>\n<ul>\n<li>Ensures the contract is still registered.</li>\n<li>Updates staker info, ledger, and contract stake info.</li>\n<li>Returns the unstaked amount and updated bonus status.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner_unstake_from_unregistered\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1548-1551\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.inner_unstake_from_unregistered\" class=\"fn\">inner_unstake_from_unregistered</a>(\n    account: &amp;&lt;T as Config&gt;::AccountId,\n    smart_contract: &amp;&lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"pallet_dapp_staking/types/struct.StakeAmount.html\" title=\"struct pallet_dapp_staking::types::StakeAmount\">StakeAmount</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>), DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Handles unstaking from an <strong>unregistered</strong> smart contract.</p>\n<ul>\n<li>Ensures the contract is no longer active.</li>\n<li>Updates staker info and ledger.</li>\n<li>Returns the unstaked amount and preserves the original bonus status.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inner_stake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1624-1629\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.inner_stake\" class=\"fn\">inner_stake</a>(\n    account: &amp;&lt;T as Config&gt;::AccountId,\n    smart_contract: &amp;&lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: <a class=\"struct\" href=\"pallet_dapp_staking/types/struct.StakeAmount.html\" title=\"struct pallet_dapp_staking::types::StakeAmount\">StakeAmount</a>,\n    bonus_status: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Inner <code>stake</code> functionality.</p>\n<p>Specifies the amount in the form of the <code>StakeAmount</code> struct, allowing simultaneous update of both <code>voting</code> and <code>build_and_earn</code> amounts.\nThe <code>bonus_status</code> is used to determine if the staker is still eligible for the bonus reward. This is useful for the <code>move</code> extrinsic.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_staker\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1736\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.is_staker\" class=\"fn\">is_staker</a>(account: &amp;&lt;T as Config&gt;::AccountId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p><code>true</code> if the account is a staker, <code>false</code> otherwise.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.era_reward_span_index\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1781\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.era_reward_span_index\" class=\"fn\">era_reward_span_index</a>(era: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Calculates the <code>EraRewardSpan</code> index for the specified era.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unlocking_period\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1792\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unlocking_period\" class=\"fn\">unlocking_period</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Unlocking period expressed in the number of blocks.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_dapp_tier_assignment\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#1797\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.get_dapp_tier_assignment\" class=\"fn\">get_dapp_tier_assignment</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/collections/btree/map/struct.BTreeMap.html\" title=\"struct alloc::collections::btree::map::BTreeMap\">BTreeMap</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u16.html\">u16</a>, <a class=\"struct\" href=\"astar_primitives/dapp_staking/struct.RankedTier.html\" title=\"struct astar_primitives::dapp_staking::RankedTier\">RankedTier</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the dApp tier assignment for the current era, based on the current stake amounts.</p>\n</div></details></div></details>",0,"shiden_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#678\">source</a><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unbond_and_unstake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unbond_and_unstake\" class=\"fn\">unbond_and_unstake</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    _contract_id: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapper around <em>legacy-like</em> <code>unbond_and_unstake</code>.</p>\n<p>Used to support legacy Ledger users so they can start the unlocking process for their funds.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.withdraw_unbonded\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.withdraw_unbonded\" class=\"fn\">withdraw_unbonded</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapper around <em>legacy-like</em> <code>withdraw_unbonded</code>.</p>\n<p>Used to support legacy Ledger users so they can reclaim unlocked chunks back into\ntheir <em>transferable</em> free balance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.maintenance_mode\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.maintenance_mode\" class=\"fn\">maintenance_mode</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    enabled: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to enable or disable maintenance mode.\nCan only be called by manager origin.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.register\" class=\"fn\">register</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    owner: &lt;T as Config&gt;::AccountId,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to register a new contract for dApp staking.</p>\n<p>If successful, smart contract will be assigned a simple, unique numerical identifier.\nOwner is set to be initial beneficiary &amp; manager of the dApp.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_dapp_reward_beneficiary\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.set_dapp_reward_beneficiary\" class=\"fn\">set_dapp_reward_beneficiary</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    beneficiary: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to modify the reward beneficiary account for a dApp.</p>\n<p>Caller has to be dApp owner.\nIf set to <code>None</code>, rewards will be deposited to the dApp owner.\nAfter this call, all existing &amp; future rewards will be paid out to the beneficiary.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_dapp_owner\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.set_dapp_owner\" class=\"fn\">set_dapp_owner</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    new_owner: &lt;T as Config&gt;::AccountId,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to change dApp owner.</p>\n<p>Can be called by dApp owner or dApp staking manager origin.\nThis is useful in two cases:</p>\n<ol>\n<li>when the dApp owner account is compromised, manager can change the owner to a new account</li>\n<li>if project wants to transfer ownership to a new account (DAO, multisig, etc.).</li>\n</ol>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unregister\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unregister\" class=\"fn\">unregister</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Unregister dApp from dApp staking protocol, making it ineligible for future rewards.\nThis doesnโt remove the dApp completely from the system just yet, but it can no longer be used for staking.</p>\n<p>Can be called by dApp staking manager origin.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lock\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.lock\" class=\"fn\">lock</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Locks additional funds into dApp staking.</p>\n<p>In case caller account doesnโt have sufficient balance to cover the specified amount, everything is locked.\nAfter adjustment, lock amount must be greater than zero and in total must be equal or greater than the minimum locked amount.</p>\n<p>Locked amount can immediately be used for staking.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unlock\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unlock\" class=\"fn\">unlock</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to start the unlocking process for the specified amount.</p>\n<p>Only the amount that isnโt actively used for staking can be unlocked.\nIf the amount is greater than the available amount for unlocking, everything is unlocked.\nIf the remaining locked amount would take the account below the minimum locked amount, everything is unlocked.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_unlocked\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_unlocked\" class=\"fn\">claim_unlocked</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Claims all of fully unlocked chunks, removing the lock from them.</p>\n</div></details><section id=\"method.relock_unlocking\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.relock_unlocking\" class=\"fn\">relock_unlocking</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.stake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.stake\" class=\"fn\">stake</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Stake the specified amount on a smart contract.\nThe precise <code>amount</code> specified <strong>must</strong> be available for staking.\nThe total amount staked on a dApp must be greater than the minimum required value.</p>\n<p>Depending on the period type, appropriate stake amount will be updated. During <code>Voting</code> subperiod, <code>voting</code> stake amount is updated,\nand same for <code>Build&amp;Earn</code> subperiod.</p>\n<p>Staked amount is only eligible for rewards from the next era onwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unstake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unstake\" class=\"fn\">unstake</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Unstake the specified amount from a smart contract.\nThe <code>amount</code> specified <strong>must</strong> not exceed whatโs staked, otherwise the call will fail.</p>\n<p>If unstaking the specified <code>amount</code> would take staker below the minimum stake threshold, everything is unstaked.</p>\n<p>Depending on the period type, appropriate stake amount will be updated.\nIn case amount is unstaked during <code>Voting</code> subperiod, the <code>voting</code> amount is reduced.\nIn case amount is unstaked during <code>Build&amp;Earn</code> subperiod, first the <code>build_and_earn</code> is reduced,\nand any spillover is subtracted from the <code>voting</code> amount.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_staker_rewards\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_staker_rewards\" class=\"fn\">claim_staker_rewards</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Claims some staker rewards, if user has any.\nIn the case of a successful call, at least one era will be claimed, with the possibility of multiple claims happening.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_bonus_reward\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_bonus_reward\" class=\"fn\">claim_bonus_reward</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to claim bonus reward for a smart contract, if eligible.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_dapp_reward\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_dapp_reward\" class=\"fn\">claim_dapp_reward</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    era: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to claim dApp reward for the specified era.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unstake_from_unregistered\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.unstake_from_unregistered\" class=\"fn\">unstake_from_unregistered</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to unstake funds from a contract that was unregistered after an account staked on it.\nThis is required if staker wants to re-stake these funds on another active contract during the ongoing period.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cleanup_expired_entries\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.cleanup_expired_entries\" class=\"fn\">cleanup_expired_entries</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Cleanup expired stake entries for the contract.</p>\n<p>Entry is considered to be expired if:</p>\n<ol>\n<li>Itโs from a past period &amp; the account did not maintain an eligible bonus status, meaning thereโs no claimable bonus reward.</li>\n<li>Itโs from a period older than the oldest claimable period, regardless of whether the account had an eligible bonus status or not.</li>\n</ol>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.force\" class=\"fn\">force</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    forcing_type: <a class=\"enum\" href=\"pallet_dapp_staking/types/enum.ForcingType.html\" title=\"enum pallet_dapp_staking::types::ForcingType\">ForcingType</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to force a change of era or subperiod.\nThe effect isnโt immediate but will happen on the next block.</p>\n<p>Used for testing purposes, when we want to force an era change, or a subperiod change.\nNot intended to be used in production, except in case of unforeseen circumstances.</p>\n<p>Can only be called by the root origin.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_staker_rewards_for\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_staker_rewards_for\" class=\"fn\">claim_staker_rewards_for</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    account: &lt;T as Config&gt;::AccountId,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Claims some staker rewards for the specified account, if they have any.\nIn the case of a successful call, at least one era will be claimed, with the possibility of multiple claims happening.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_bonus_reward_for\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.claim_bonus_reward_for\" class=\"fn\">claim_bonus_reward_for</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    account: &lt;T as Config&gt;::AccountId,\n    smart_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to claim bonus reward for a smart contract on behalf of the specified account, if eligible.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.move_stake\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.move_stake\" class=\"fn\">move_stake</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    source_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    destination_contract: &lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.SmartContract\" title=\"type pallet_dapp_staking::pallet::Config::SmartContract\">SmartContract</a>,\n    amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PostDispatchInfo, DispatchErrorWithPostInfo&lt;PostDispatchInfo&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Transfers stake between two smart contracts, ensuring bonus status preservation if eligible.\nEmits a <code>StakeMoved</code> event.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_static_tier_params\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_dapp_staking/pallet/struct.Pallet.html#tymethod.set_static_tier_params\" class=\"fn\">set_static_tier_params</a>(\n    origin: &lt;T as Config&gt;::RuntimeOrigin,\n    params: <a class=\"struct\" href=\"pallet_dapp_staking/types/struct.TierParameters.html\" title=\"struct pallet_dapp_staking::types::TierParameters\">TierParameters</a>&lt;&lt;T as <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_dapp_staking/pallet/trait.Config.html#associatedtype.NumberOfTiers\" title=\"type pallet_dapp_staking::pallet::Config::NumberOfTiers\">NumberOfTiers</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, DispatchError&gt;</h4></section></summary><div class=\"docblock\"><p>Used to set static tier parameters, which are used to calculate tier configuration.\nTier configuration defines tier entry threshold values, number of slots, and reward portions.</p>\n<p>This is a delicate call and great care should be taken when changing these\nvalues since it has a significant impact on the reward system.</p>\n</div></details></div></details>",0,"shiden_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; PalletInfoAccess for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.index\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.name_hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">name_hash</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Two128 hash of name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.module_name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.crate_version\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","shiden_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; PalletsInfoAccess for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.count\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of palletsโ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.infos\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the palletsโ information that this type represents.</div></details></div></details>","PalletsInfoAccess","shiden_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#262\">source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","shiden_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SafeModeNotify-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#2731\">source</a><a href=\"#impl-SafeModeNotify-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; SafeModeNotify for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"docblock\"><p>Implementation of the <code>SafeModeNotify</code> trait for the <code>DappStaking</code> pallet.\nThis integration ensures that the dApp staking protocol transitions to and from\nmaintenance mode when the runtime enters or exits safe mode.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.entered\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#2732\">source</a><a href=\"#method.entered\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">entered</a>()</h4></section></summary><div class='docblock'>Called when the runtime enters safe mode.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exited\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#2736\">source</a><a href=\"#method.exited\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">exited</a>()</h4></section></summary><div class='docblock'>Called when the runtime exits safe mode.</div></details></div></details>","SafeModeNotify","shiden_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; StorageInfoTrait for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#99\">source</a><a href=\"#method.storage_info\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","shiden_runtime::DappStaking"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; WhitelistedStorageKeys for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"pallet_dapp_staking/pallet/trait.Config.html\" title=\"trait pallet_dapp_staking::pallet::Config\">Config</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#92\">source</a><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","shiden_runtime::DappStaking"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_dapp_staking/lib.rs.html#101\">source</a><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"pallet_dapp_staking/pallet/struct.Pallet.html\" title=\"struct pallet_dapp_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section>","Eq","shiden_runtime::DappStaking"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()