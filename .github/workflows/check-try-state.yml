name: Try-State Checks

on:
  # Run daily at 10 AM UTC (aligned with dAppStaking era changes on Astar with a 2hours buffer)
  #  schedule:
  #    - cron: '0 10 * * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-try-state:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime:
          - { name: astar, endpoint: ASTAR_RUNTIME_ENDPOINT }
          - { name: shiden, endpoint: SHIDEN_RUNTIME_ENDPOINT }
          - { name: shibuya, endpoint: SHIBUYA_RUNTIME_ENDPOINT }
      fail-fast: false

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install system dependencies
        run: sudo apt -y install protobuf-compiler jq

      - name: Install & display rust toolchain
        run: rustup show

      - name: Check targets are installed correctly
        run: rustup target list --installed

      - name: Install TypeScript and dependencies
        run: |
          npm install -g typescript ts-node
          npm install @polkadot/api

      - name: Fetch current runtime version for ${{ matrix.runtime.name }}
        id: runtime-version
        env:
          ENDPOINT: ${{ secrets[matrix.runtime.endpoint] }}
        run: |
          echo "Fetching runtime version for ${{ matrix.runtime.name }} from $ENDPOINT"
          
          # Run the TypeScript script and capture output
          RUNTIME_VERSION=$(ts-node .github/scripts/fetch-runtime-version.ts)
          echo "Current runtime version: $RUNTIME_VERSION"
          echo "runtime_version=$RUNTIME_VERSION" >> $GITHUB_OUTPUT

      - name: Find and checkout runtime tag
        id: checkout-tag
        run: |
          RUNTIME_VERSION=${{ steps.runtime-version.outputs.runtime_version }}
          RUNTIME_TAG="runtime-$RUNTIME_VERSION"
          
          echo "Looking for tag: $RUNTIME_TAG"
          
          # Check if the tag exists
          if git tag -l | grep -q "^$RUNTIME_TAG$"; then
            echo "Found tag: $RUNTIME_TAG"
            git checkout $RUNTIME_TAG
            echo "tag_found=true" >> $GITHUB_OUTPUT
            echo "runtime_tag=$RUNTIME_TAG" >> $GITHUB_OUTPUT
          else
            echo "Tag $RUNTIME_TAG not found in repository"
            echo "Available runtime tags:"
            git tag -l | grep "^runtime-" | tail -10
            echo "tag_found=false" >> $GITHUB_OUTPUT
            echo "runtime_tag=$RUNTIME_TAG" >> $GITHUB_OUTPUT
          fi

      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/
            ~/.cargo/git
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build ${{ matrix.runtime.name }} runtime with try-runtime feature
        run: |
          echo "Building ${{ matrix.runtime.name }} runtime for try-state checks..."
          cargo build --release --locked --package ${{ matrix.runtime.name }}-runtime --features try-runtime

      - name: Verify runtime blob exists
        run: |
          PACKAGE_NAME=${{ matrix.runtime.name }}-runtime
          RUNTIME_BLOB_NAME=$(echo $PACKAGE_NAME | sed 's/-/_/g').compact.compressed.wasm
          RUNTIME_BLOB_PATH=./target/release/wbuild/$PACKAGE_NAME/$RUNTIME_BLOB_NAME
          
          if [ ! -f "$RUNTIME_BLOB_PATH" ]; then
            echo "Error: Runtime blob not found at $RUNTIME_BLOB_PATH"
            ls -la ./target/release/wbuild/$PACKAGE_NAME/
            exit 1
          fi
          
          echo "Runtime blob found: $RUNTIME_BLOB_PATH"
          echo "RUNTIME_BLOB_PATH=$RUNTIME_BLOB_PATH" >> $GITHUB_ENV

      - name: Run ${{ matrix.runtime.name }} try-state checks
        timeout-minutes: 60
        env:
          ENDPOINT: ${{ secrets[matrix.runtime.endpoint] }}
        run: |
          echo "Running try-state checks for ${{ matrix.runtime.name }} runtime..."
          echo "Runtime version: ${{ steps.runtime-version.outputs.runtime_version }}"
          echo "Runtime tag: ${{ steps.checkout-tag.outputs.runtime_tag }}"
          echo "Tag found: ${{ steps.checkout-tag.outputs.tag_found }}"
          echo "Using runtime: ${{ env.RUNTIME_BLOB_PATH }}"
          
          npx @acala-network/chopsticks try-runtime \
            -c ${{ matrix.runtime.name }} \
            -e ${{ env.ENDPOINT }} \
            --import-storage .github/try-runtime-storage.yml \
            --checks TryState \
            --runtime ${{ env.RUNTIME_BLOB_PATH }} \
            --disable-spec-check
