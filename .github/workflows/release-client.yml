name: Test AArch64 Linux Build

on:
  push:
    branches:
      - '**'
  pull_request:
  workflow_dispatch:

jobs:
  native-linux-aarch64:
    runs-on: [self-hosted, Linux, X64]
    steps:
      - name: Checkout the source code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install dependencies
        run: sudo apt update && sudo apt install -y \
          gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
          libssl-dev:arm64 pkg-config qemu-user \
          protobuf-compiler lld

      - name: Setup aarch64 cross-compilation
        run: |
          mkdir -p .cargo
          cat <<EOF > .cargo/config
          [target.aarch64-unknown-linux-gnu]
          linker = "aarch64-linux-gnu-gcc"
          pkg-config = "aarch64-linux-gnu-pkg-config"
          EOF

          echo -e '#!/bin/bash\nPKG_CONFIG_SYSROOT_DIR=/usr/aarch64-linux-gnu pkg-config "$@"' | sudo tee /usr/bin/aarch64-linux-gnu-pkg-config
          sudo chmod +x /usr/bin/aarch64-linux-gnu-pkg-config

      - name: Install & display Rust toolchain
        run: rustup show

      - name: Add aarch64 target
        run: rustup target add aarch64-unknown-linux-gnu

      - name: Verify targets installed
        run: rustup target list --installed

      - name: Build optimized aarch64 binary
        env:
          OPENSSL_DIR: /usr/lib/aarch64-linux-gnu
          OPENSSL_LIB_DIR: /usr/lib/aarch64-linux-gnu
          OPENSSL_INCLUDE_DIR: /usr/include/aarch64-linux-gnu
          PKG_CONFIG_ALLOW_CROSS: "1"
        run: cargo build --profile production --target aarch64-unknown-linux-gnu --locked --bin astar-collator
